{"2023/Terminal-File-Manager":{"title":"Terminal File Manager","links":["Vim","Quick-References/ViFM-Cheatsheet","Emacs"],"tags":["Software"],"content":"比起各种 GUI 的文件管理器，比如各个操作系统自带的文件管理器，或者第三方的像 Total Commander 和 ForkLift 之类的，Terminal File Manager 的优势有两个：\n\n支持所有的操作系统，这样在所有系统中都有相同的体验，特别是可以搭配同样跨平台的 terminal，比如 Wezterm， Alacritty；\n更好的键盘操作支持，有些 GUI 的管理器同样有部分的键盘快捷键支持，但是远远不如 terminal 中的易用和全面，毕竟在 terminal 中是键盘为主，鼠标为辅的操作逻辑。\n\n这两个优势带来的好处就是用户只需熟练使用一种操作逻辑就可以在所有操作系统中高效地完成文件管理工作，而对比 GUI 程序不足的点在于：\n\n不能显示图片，terminal 最大的问题是基于文本的，所以不能在 file manager 中实时的预览图片，Ranger 中有插件可以支持，但似乎已经不再更新了；\n翻页和滚动不如 GUI，terminal 中的滚动是按行来的，而 GUI 中是按像素来的，直观来说就是 GUI 中的滚动会流畅非常非常多；\n打开的可能没有 GUI 快，一般的文件管理器会常驻在系统 Dock 上，可以快速的打开，用户也习惯了通过鼠标快速的点击到目标目录，而 terminal 则要先打开 terminal，再打卡 file manager 再通过键盘操作来进入目录（这里可以通过各种办法跳过），这一点需要看使用场景，如果是已经在 terminal 当中，那打开 file manager 的速度会比 GUI 快很多。\n\n但这些劣势其实并不影响文件管理的核心功能，所以大部分时间我们可以使用 terminal 来作为主力管理器。\n比起在 Linux 上使用 shell 命令来说，terminal file manager 提供了一种更直观的操作逻辑，在图形界面批量处理选择复制等操作比起使用命令来说会更直观和高效，但在批量处理时可能会不如特别编写的脚本，不过 file manager 在所有操作系统上都有同样的快捷键，而 DOS 和 linux shell 则是完全不同的命令了。\n下面是些我了解的 Terminal File Manager。\nVifm\nVifm 是一个两栏的文件管理器，其最大的优势就是操作逻辑和 Vim 相近，Vim 用户可以使用同样的快捷键进行移动，甚至复制删除等操作也符合 Vim 的逻辑，这里有个 ViFM Cheatsheet 列出了所有常用的快捷键。\n\n项目地址：vifm.info/\n\nMidnight Commander\nMidnight Commander 有点像是个 terminal 版的 total commander，主要操作都绑定在了 FN 键上，移动的快捷键则是 Emacs 风格，比较有特点的是能够方便的对文件进行压缩和解压，可以直接进入 zip 压缩文件，并往 zip 中 copy 文件，但让我最困惑地是它缺少了回到上一级文件夹的快捷键，只有点击 /.. 目录才行，这让文件浏览的速度大打折扣。\n\n项目地址：midnight-commander.org/\n介绍视频：My FAVORITE File Manager - Complete Midnight Commander Tutorial\n\nRanger\nRanger 也是一个基于 vim 快捷键逻辑的管理器，默认是多级的目录浏览，也可以配置成 Midnight Commander 类似的双栏的显示效果，主要的优势可能是用的人数要多些，插件更多，教程可能也更多一点，但 ranger 是 python 写的，所以安装时要安装 python 的依赖，内存消耗上也会比上面两个要大。\n\n项目地址：ranger.github.io/\n\nLF\n类似 Ranger，但是用 golang 写成。\n\n项目地址：github.com/gokcehan/lf\n\nYazi\n用 Rust 写的 LF, 比起 LF 来说，最大的好处就是内置了针对各种 terminal app 的图片显示支持，基本不用配置，开箱就能用。\n\n项目地址：github.com/sxyazi/yazi\n"},"Blogs/Emacs-中英文的对齐设置":{"title":"Emacs 中英文的对齐设置","links":[],"tags":["Software/Editor/Emacs","Programming/Fonts"],"content":"emacs 中的中英文对齐对于稍微有点强迫症的人来说算是个可以折腾的人直挠头的问题了，特别是当你使用 org-mode ，并且在文章中添加表格的时候。在不做任何设置的情况下，默认的结果可能是这样的：\n\n在网上搜索一番之后，会找到一个 cnfonts 的解决方案，思路是为中文和英文字体分别设置不同大小，经过一番调整，得到结果是这样的：\n\n但这个方案其实还是有些个问题：\n\n\n对齐的设置是按照宽度来设置的，这就导致了有些英文字体小，但对应的中文字体太大，宽度虽然对上了，高度却差了很多，照成上图中的中英文行距明显大于英文之间的行距。\n\n\n不能够放大缩小，我用的 emacs-mac 的 fork，可以使用 trackpad 的手势对字体进行缩放，但是 cnfonts 调整过后的中英文放到缩小的比例是不同的，导致不仅对不齐，而且中英字体的字号差距太大，没法看。\n\n\n在有些主题中，buffer 的字体设置有些不同，和设置字体的设置可能有冲突，有可能会导致一些字体突然变得特别大，我就遇到过在某一个主题中 org-agenda 的英文字体突然大到夸张的情况。\n\n\n除了这三点，其实还有一点是我选择直接拷贝 cnfonts 生成的 elisp 到 custom.el 来设置字体， cnfonts 生成的默认字体大小对于有些字体来说太小了，加大一号又太大了，中间的大小又没有对齐。所以在使用了一段时间之后我决定再想想办法。\n其他方案\n在放弃了 cnfonts 的解决方案之后，我想到的最后的解决方案是找到一对严格或者近似符合 2:1 的中英文字体，这样不管在放大或缩小的情况下，两个字体都能配合的比较完美，不会出现忽大忽小的问题。最终我找到的是 Ubuntu Mono 配合 Sarasa Mono SC，以及 Iosevka 配合 Sarasa Mono SC 。其中来说 Iosevka 搭配 Sarasa Mono SC 比较完美，因为是同一人之手。而 Ubuntu Mono 会稍微有一点点差距，在 size &lt; 15 的时候都是能完美对齐，另外高度会有一点点差距。可以通过使用下面的方法来进行设置。\n(let ((default-font (font-spec :name &quot;Iosevka&quot; :size 15))\n      (cn-font (font-spec :name &quot;Sarasa Mono SC&quot;)))\n  (set-face-attribute &#039;default nil :font default-font)\n  (dolist (charset &#039;(kana han symbol cjk-misc bopomofo))\n    (set-fontset-font t charset cn-font)))\n\n更进一步\n进行到上一步的时候其实已经差不多了，除了，对于有些喜新厌旧的人来说某一个字体看久就会老想着换到别的字体，那怎么办？在搜索方案的过程中我看到了 emacs 的一个叫做 face-font-rescale-alist 的变量，查看变量和帮助文档，可以看到如下描述：\nThis variable specifies scaling for certain faces. Its value should be a list of elements of the form\n \n(fontname-regexp . scale-factor)\n \nIf fontname-regexp matches the font name that is about to be used, this says to choose a larger similar font according to the factor scale-factor. You would use this feature to normalize the font size if certain fonts are bigger or smaller than their nominal heights and widths would suggest.\n所以我们可以将中英文字体的大小设置为相同，然后通过这边变量来单独的放大或缩小英文字体的显示，以便和英文字体对齐。于是结合上面的设置我将新的设置方案写成了一个函数方便快速的调整我想要的字体。\n(defun max/set-font (FONT-NAME CN-FONT-NAME &amp;optional INITIAL-SIZE CN-FONT-RESCALE-RATIO)\n  &quot;Set different font-family for Latin and Chinese charactors.&quot;\n  (let* ((size (or INITIAL-SIZE 14))\n\t (ratio (or CN-FONT-RESCALE-RATIO 0.0))\n\t (main (font-spec :name FONT-NAME :size size))\n\t (cn (font-spec :name CN-FONT-NAME)))\n    (set-face-attribute &#039;default nil :font main)\n    (dolist (charset &#039;(kana han symbol cjk-misc bopomofo))\n      (set-fontset-font t charset cn))\n    (setq face-font-rescale-alist (if (/= ratio 0.0) `((,CN-FONT-NAME . ,ratio)) nil))))\n这样我就能通过如下的办法来设置我想要的字体，并且通过一个参数来调整中文的对齐了。\n(max/set-font &quot;JetBrains Mono&quot; &quot;Hiragino Sans GB&quot; 13 1.25)\n(max/set-font &quot;Fira Code&quot; &quot;Hiragino Sans GB&quot; 13 1.25)\n(max/set-font &quot;Monaco&quot; &quot;Sarasa Mono SC&quot; 13 1.25)\n(max/set-font &quot;Fira Code&quot; &quot;Source Han Serif SC&quot; 13 1.3)\n部分的效果如下，总体来说 Sarasa Mono SC 的效果会比其他的中文字体好一些，其他的中文字体应该自身并不是 monospace，所有只有在特定的 size 下才会对齐，就当作是中调剂吧。\n\n\n\n相关的一些链接\n\nSarasa Gothicc\nIovseka\nUbuntu Mono\nEmacs cnfonts\nemacs-china上关于等宽字体的讨论\n"},"Blogs/Moral-Lessons-from-GNU-Emacs---Protesilaos":{"title":"Moral Lessons from GNU Emacs - Protesilaos","links":["Emacs"],"tags":["Software/Editor/Emacs","Philosophy"],"content":"Protesilaos 是 Emacs 社区近几年比较活跃的贡献者，开发了好几个比较出名的包，比如高质量的主题 Modus Theme，在 Emacs 28 之后已经被打包进入了 Emacs 中，可以直接使用。还有新的 EF Theme，看着也不错，但因为我自己没有用 Emacs 了，所以没有尝试过。\n他包开发的思路也和近几年 Emacs 社区的趋势十分契合，充分的发掘 Emacs 本身内部的潜力，尽量依托 Emacs 本身的内置功能，构建起功能单一高效的插件，每个插件通过所依托的 Emacs 本身的功能相互配合达到更强的功能，而不是重新造轮子，产生一套和 Emacs 内置功能冲突的有自己独立一套 API 的臃肿插件。\n其个人的经历也很有意思，并非计算机科班出身，希腊人，学的是哲学，以前在希腊的世界银行工作，疫情之后失业才开始使用和学习 Emacs ，为 Emacs 开发插件，现在在希腊山上一边种地一边在网上分享自己的哲学心得，一边维护自己的 Emacs 项目。\n\n\n                  \n                  题外话 \n                  \n                \n\nEmacs 社区有些背景很神奇的贡献者，比如 Emacs 内置 LSP 插件 Eglot 的贡献者 João Távora ，这人是个葡萄牙学画画的。\n\n\n以下的几段话是摘自 Protesilaos 2021 年的演讲 Moral Lessons from GNU Emacs，我觉得说的挺对，就记下来了。\n\n\n                  \n                  Quote\n                  \n                \n\nThis is no magical way to boost your productivity by changing the software you use, while keeping your mindset constant.\n如果不改变你使用工具的思路，就算是不断的更换使用的工具也没办法神奇的提高你自身的效率。\n\n\n\n\n                  \n                  Quote\n                  \n                \n\nAutonomy comes at a cost. It presupposes responsibility, and this predicated on discipline. If you do not want to be responsible, if you prefer to be spoon-fed what life has to offer, then you remain in a state of heteronomy with its fake comforts.\n自主是有代价的。自主意味着责任，而责任又以纪律为前提。如果你不想负责任，如果你喜欢别人喂你生活提供的一切，那么你就会处于一种他律状态，享受虚假的舒适。\n\n\n\n\n                  \n                  Quote\n                  \n                \n\nWhat made me change habits was the realization that there is no “cheat code” or “secret lift hack” to gaining expertise in any given field. You have to earn it. And this means you have to put some serous effort into it.\n当我意识到，在任何领域，没有“秘诀”或“秘密技巧”可以让你获得专业知识时，我才开始改变我的习惯。你必须努力工作才能有收获，这里的努力工作指的是你必须付出一些真正的实际的努力，而不是看上去像是在努力。\n\n\n\n\n                  \n                  Quote\n                  \n                \n\nTake your time. Read, read, read! And proceed slowly from the basics to the more advanced issues.\n花时间耐心的去阅读，阅读，再阅读！耐心的吸收和消化基础的技能，再去尝试更高阶的技巧。\n\n\n一句话总结，脚踏实地，夯实基础，实事求是的努力，而不是寄希望于一些外在的所谓提供效率的工具，不求外物，反求诸己。"},"Blogs/UTXO的委托代理问题":{"title":"UTXO的委托代理问题","links":["tags/TODO"],"tags":["政治经济/货币","ComputerScience/Bitcoin","TODO"],"content":"经济学中委托代理问题指的是由于代理人的利益与目标与委托人的利益与目标不一致，加上存在不确定性和信息不对称，在缺乏有效监督和措施时，代理人更倾向与损害委托人的利益以牟取自己利益的现象。\nUTXO 作为支付工具的委托代理问题\n软分叉与硬分叉\n软分叉为向前与向后兼容，硬分叉为只向后兼容（升级过的节点可以验证未升级节点产生的块）。软件的 Bug 和版本升级都可能带来分叉。\n开发者、矿池和代币投资者之间的信托关系及委托代理问题\n开发者提供分叉的技术方案并负责技术实施，矿池有权拒绝和接受升级后生产的区块，拥有投票权。开发者和矿工相当于企业的普通合伙人（General Partner）， 拥有充分的管理和控制权，代币持有者相当于普通合伙人（Limited Partner），拥有受益权。代币持有人和开发者与矿工存在委托代理关系，如果信息不对称，容易引发代理委托问题，开发者与矿工可能处于自己的私利，改变共识机制，从\n而损害代币持有者的利益。\n例子，比特币扩容问题，看似是开发者于矿工的技术理念不同，实则是各自利益出发点的不同。支持扩大区块的矿工，是为希望更多人使用链上的比特币交易，由此赚钱更多的交易手续费，而开发者支持闪电网络，则是开发者中有人就职于研发闪电网络的公司，可以赚取专利费，但闪电网络将大量小额交易隔离到链下，损害了矿工的利益。\n另外，分叉发行 IFO 相当于变相的通货膨胀，摊薄了代币持有者的权益。\nUTXO 作为加密权益的委托代理问题\n投资者与 ICO 发起人\n投资人与 ICO 发起人之间是一种基于委托代理的长期契约，投资者购买初始代币，投资发起人，发起人开发区块链项目，不承诺保障代币的未来价值。虽然发起人在 ICO 时会披露资金的使用计划，但是 ICO 之后的资金使用无人监管，发起人也没有强制义务公开资金的具体使用。信息不对称容易引起投资人与发起人之间的委托代理问题。ICO 无需专业的审核程序，容易发生 ICO 欺诈的行为，反过来在欺诈成风的情况下，投资者行为也变的短期化，不关注项目的未来价值，追求短期收益，投机炒作。\n投资者与中心化交易所\n投资者与中心化交易所之间也存在委托代理问题。各类交易平台长期缺乏监管，处于完全自治的状态，集登记、托管、交易、结算等诸多功能于一身，既无监管约束，也没有市场监督。从风险防范角度看，合规的做法应是交易平台只做信息撮合和交易，而将登记、托管和结算交由具有市场公信力的第三方来负责。通常而言，资产托管在专业化、技术水平和成本投入等方面都有很高要求，绝非民间私营机构能够承担。作为私营的机构，现有中心化交易平台的托管体系从安全性上还远远不够，托管和结算风险高。\nUTXO 作为数字资产的委托代理问题\n数字资产以货币、证卷、实物、加密代币或者其它数字资产作为抵押而发行，映射了抵押品的价值。如果抵押物为加密代币，那么可以通过智能合约的透明可信、自动执行、强制履约等特性来保证数字资产与抵押品之间的最终兑付，但如果抵押品是现实世界的资产，就会面临价值偿付的问题。区块链的共识机制创造了链上信任，但是支持不了链下信任。数字资产发行者与持有者之间也是一种长期契约关系，在信息不对等的情况下，存在委托代理问题。\n我们通常所见的证卷或商品的电子化交易，由特定的可信机构负责证卷托管与清算，有效的保障了证卷交割的安全和效率。而 Bitcoin 等并没有足够可信的第三方机构，而且如果有的话，也和 Bitcoin 所设想的完全去中心话思想背道而驰，这里 Bitcoin 陷入了悖论当中。\nReference\nTODO add cite to paper in zotero"},"Blogs/VIM实用技巧":{"title":"VIM实用技巧","links":["Vim","Neovim","ASCII","Unicode"],"tags":["Software/Editor/Vim"],"content":"使用 Vim 进行的编辑的核心使用逻辑为执行，重复，回退。即先执行一次编辑动作，再在别的地方重复同一操作，如果不小心出错了就回退操作。可以理解为每次的编辑动作都被 Vim 自动保存为了一小段宏，再移动到另一个地方执行同一段宏，如果发现宏录错了，就快速回退，再重复这一过程，直到编辑完成。\n所以，掌握 Vim 的第一步就是理解哪些是可以重复的操作以及如何回退。\n可重复操作和对应的回退操作\nVim 中有很多操作是同一操作的两个方向，这类操作一般使用大小写来区分方向，比如 f{char} 向前到指定字符，F{char} 向后前进到指定字符。\n一些编辑操作也有特别的撤销的操作，如下表所示：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n目的操作重复回退做出一个修改{edit}.u在行内查找下一个制定字符f{char}/t{char};,在行内查找上一个制定字符F{char}/T{char};,在文档中查找下一处匹配项/pattern&lt;CR&gt;nN在文档中查找上一处匹配项?pattern&lt;CR&gt;nN执行替换:s/target/replacement&amp;u执行一系列修改qx{changes}q@xu\nUndo 命令\nNormal 模式下使用 u 可以撤销一次编辑动作。\n\n\n                  \n                  注意 \n                  \n                \n\n命令撤销的不是上一次的输入，而是一次编辑动作。\n\n\n一次编辑动作可以被以下三种情况规定：\n\n在 Normal Mode 中使用编辑动作， 比如 ., &lt;C-a&gt;, s/target/replace；\n进入 Insert Mode 到退出 Insert Mode 中间的所有操作，除了包含 3 中所述的情况；\n在 Insert Mode 中使用光标移动的操作，会立即将已有的输入保存为一次编辑动作块，包括 &lt;UP&gt;, &lt;Down&gt;, &lt;Left&gt;, &lt;Right&gt; 等，可以理解为我们回到了 Normal Mode 进行了光标的移动。\n\n\n\n                  \n                  Tips\n                  \n                \n\n使用 Redo 命令来撤销 Undo，快捷键为 &lt;Ctrl + r&gt; 。\n\n\n快速增减数字\n&lt;c-a&gt; 会正向跳到第一个数字上，并将数字 +1， &lt;c-x&gt; 会将数字 -1， 也可手动制定增减的值，如 180&lt;c-a&gt; 。但有两点需要注意：\n\n进制问题，类似 007 这种数字，会默认识别为 8 进制数\n日期增减问题，如果日期格式为 2020-10-07，当试图对月日进行增减时，会被识别为负数，其增减方向和期望的方向恰好相反\n\n以 root 权限保存文件\n:w !sudo tee % &gt; /dev/null\n\n% 符号会自动展开为当前文件路径，所以这条命令工作的原理就是通过 Vim :write 命令将文件内容通过标准输出写入到有 root 权限的 sudo tee &lt;filepath&gt;命令，这样就能成功保存了。\n\n\n                  \n                  注意 \n                  \n                \n\n这个技巧只能用于 Vim，而不适用于 Neovim，Neovim 中不支持 ! 命令中交互输入密码，所以只能使用插件或者将 tee 命令设置为不使用密码也能使用 sudo，再使用命令 :w sudo -n tee % 调用。\nSee Also: Neovim FAQ, Neovim Issue, Another Issue\n\n\n输入特殊字符\nVim/Neovim中支持使用ASCII或Unicode编码输入键盘上无法找到的字符，在输入模式下使用 Ctrl + v 快捷键就能进入编码输入的模式，这模式下有三种不同输入。\n\n直接输入 3 位数字，如 &lt;Ctrl + v&gt;065 会以十进制编码输入字符，这里会输入大写字母 “A”\n输入 u 之后可以输入 4 位数字的 Unicode 字符，如 &lt;Ctrl + v&gt;u00bf 会输入字符 ”¿”\n输入非数字键则会直接输入键入的字符，比如 &lt;Ctrl + v&gt;&lt;TAB&gt; 会输入一个 tab 符，并且不会因为在配置中设置了 tab 转空格而自动的被转化为空格\n\n如果已经在文本中存在的字符，如果想知道其字符编码，可以在 Normal Mode 将光标移动到对应字符使用快捷键 ga，屏幕下方就会显示出其对应的编码。\n另外也可以通过二合字母来插入特殊字符，使用方式是在插入模式下使用 &lt;Ctrl + k&gt;{char1}{char2} 的快捷键，比如 &lt;Ctrl + k&gt;&lt;&lt; 可以输入左书名号 ”«“，&lt;Ctrl + k&gt;12 可以输入 “½”，二合字母比起使用数字更容易记忆使用，使用 :h digraphs 了解更多信息，或者使用 :h digraph-table 查询所有可以输入的字符表。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n按键用途&lt;Ctrl+v&gt;{123}以十进制字符编码输入字符&lt;Ctrl+v&gt;u{1234}以十六进制编码输入字符&lt;Ctrl+v&gt;{nondigital}按原义插入非数字字符&lt;Ctrl+k&gt;{char1}{char2}插入二合字母表示的字符\n参考\n\n《Vim 实用技巧》\n"},"Blogs/Windows-开机端口被随机占用的原因与修复":{"title":"Windows 开机端口被随机占用的原因与修复","links":[],"tags":["Windows"],"content":"一个奇怪的问题\n在用 Windows 的时候遇到一个特别烦躁的 bug，有些需要绑定端口的程序老是启动不了，比如 Clash，Wezterm，查询程序的启动日志，发现是无法绑定端口，程序有时会提示是端口已经被使用，所以考虑去手动把占用端口的程序关掉，但是使用  netstat -ano|findstr &quot;&lt;port&gt;&quot;  的命令去查询是哪个进程在占用，却怎么也找不到。因为 Windows 确实用的时间不多，问题出现也很随机，所以有段时间我的解决方案都是简单地换端口多试几次（有时换地端口也有问题，要多试几次）。但最近用 Wezterm 和 WSL 的次数有所增加，这个问题就越发地烦人了，基本每次启动都要试很多次，所以决定好好查查这个问题到底是怎么回事。\n问题原因\n造成这个 bug 有三个方面：\n第一，Windows 中会为一些专用的需要端口的程序设置一个专门的可分配端口的范围，叫做动态端口范围，这个范围内的端口号可以被预先申请保留，保留之后相当于被占用，别的程序无法使用。这个范围默认值是 49152-65535，这个范围实际上是没有在 IANA 注册的端口号，平时基本不会用到，可以使用命令 netsh int ipv4 show dynamicport tcp 查询当前的范围。\n第二，使用 Hyper-V 的 WSL 就是这么个程序，Hyper-V 启动之后就会在动态端口范围内随机的预先保留一些端口段，以供后续 WSL 使用。\n第三，由于某些 Windows 自身的 bug，可能是 Windows Update 的问题，导致这个动态范围的值被错误的修改，从 49152-65535 修改旧 Windows 默认的开始端口加新的端口范围，成了 1024-15001 这个比较常用的范围，这样很多程序在申请端口时会刚好撞上已经被 Hyper-V 预先保留的端口范围，导致失败，并且无法通过 netstat -ano 查找到占用的程序，因为端口只是被预留了而没有真正的在使用中。\n解决办法\n知道原因之后，修复的方法也很简单，只需要将范围重新设置为默认值，或者个人不常用的范围就好。\n首先，使用 netsh int ipv4 show dynamicport tcp 确认下当前的范围是不是错的：\nPS C:\\Users\\max&gt; netsh int ipv4 show dynamicport tcp\n \n协议 tcp 动态端口范围\n---------------------------------\n启动端口        : 1024\n端口数          : 13977\n通过 netsh int ipv4 show excludedportrange protocol=tcp 命令可以查询当前已被保留的端口范围，可以确认自己要使用的端口是不是已经预先被保留了。\nPS C:\\Users\\max&gt; netsh int ipv4 show excludedportrange protocol=tcp\n \n协议 tcp 端口排除范围\n \n开始端口    结束端口\n----------    --------\n1026        1125\n1126        1225\n1226        1325\n3262        3361\n3462        3561\n3662        3761\n5357        5357\n5628        5727\n5728        5827\n5828        5927\n5928        6027\n6228        6327\n6328        6427\n6449        6548\n6549        6648\n7018        7117\n7118        7217\n50000       50059     *\n \n* - 管理的端口排除。\n通过下面的命令重新设置 TCP 动态端口范围\nnetsh int ipv4 set dynamic tcp start=49152 num=16383\nnetsh int ipv6 set dynamic tcp start=49152 num=16383\n重新设置之后重启 winnat 服务的办法来使得新的范围生效\nnet stop winnat\nnet start winnat\n或者也可以直接重启电脑。\n参考连接\n\nWindows TCP/IP 默认动态端口范围\nINNA 服务名称和传输协议端口号注册表\n"},"Blogs/使用-orgmode-+-github-pages-搭建博客":{"title":"使用 orgmode + github pages 搭建博客","links":[],"tags":["Software/Editor/Emacs"],"content":"\n\n                  \n                  附注 \n                  \n                \n\n文章迁移自旧博客，已不再具有时效性，只是作为存档。\n\n\n上篇说到我重新搭建起自己的博客，这篇讲讲目前写文章使用的工具以及主要使用到的工具。\n等等，上篇才说到术和道的关系，咋现在又开始捣鼓起写博客的工具来了？\n这，确实，这篇确实是关于工具的文章，但是主要不是捣鼓各种工具，而是记录下这次使用到的东西和用法，算是对这项工作的总结吧。\n简单来说，目前我写文章会用到 emacs orgmode, ox-hugo, hugo, git, github pages 这几个东西，具体的流程如下：\n\n使用 orgmode 来写文章\n通过 ox-hugo 插件来将 org 文件转化为 markdown 文件\n使用 hugo 将 markdown 文件生成静态网页\n使用 git 将静态页面发布到 github pages\n\n所用到的工具们\nemacs + orgmode\n作为一个在编辑器圣战中反复横跳的人，我用过 emacs，vim，sublime，vscode，neovim。最近再使用了 neovim 作为工作开发的主力差不多一年，就在我以为它已经是我的最终归属的时候，我还是重新盼到回了初恋 emacs 的怀抱（哼，男人！）。\n原因其实很简单，neovim 很优秀，但 lisp 太美了。neovim，vscode 们像是一个干活很利索的工人，你告诉他你想做什么，他会告诉你能做还是不能做，如果能做就利索给你搞定，而 emacs 更像是个可以在你面前宽衣解带的姑娘，她不仅仅可以帮你帮事情做完，而且只要你有兴趣，就可以还不费力的窥见她做事的内部逻辑。\n所以，目前我主力写文章的工具是 emacs + orgmode， orgmode 应该是所有 emacs 用户都会使用的 mode 了，因为用处很多，可以写文章，做笔记，做日程管理等等，但我目前主要使用的功能是写文章和记笔记。\nox-hugo\nox-hugo 是 orgmode 的一个导出插件，主要功能就是在 orgmode 的导出选项中增加一个导出为 hugo 所要求的 markdown 格式的文件。可以解决使用 pandoc 转换的话要手动添加 hugo 要求的 metadata 的问题。\n我目前配置 ox-hugo 的代码如下，我使用了 use-package 来进行 emacs 的插件管理：\n(use-package ox-hugo\n  :ensure t\n  :after ox)\nhugo\n一款比较流行的 static site generator，相比 Jekyll，我其实不太在乎网页生成时间这种指标，只是使用 Jekyll 的话，需要本地安装 ruby 和一些依赖， hugo 则是直接编译好的一个二进制文件，相对来说要简洁很多。具体的用法可以参照 hugo 的quickstart。\ngithub pages\n这个没有什么说的，比起自己搭建服务器，将博客这种简单的静态网页托管在 github 上确实非常方便。但是对于国内的用户，有可能 github 的访问可能不是非常稳定，所以我选择将内容放在 github 上，而域名是通过 cloudflare 的服务来管理。这样可以通过 cloudflare 来对流量做中转，虽然免费版的 cloudflare 说不上快，但是国内访问来说，还是比直接访问 github.io 来说要稳定一些。\n文章的生成过程\n下面大概解释下文章的格式转换和发布的流程。\n构建基本目录结构 {#构建基本目录结构}\n参照 hugo 的 quickstart，建立一个自己的博客项目，其主要的目录结构如下：\npersonal_blog $ ls -alh\ntotal 8\ndrwxr-xr-x   3 qingyi  staff   96 Dec  3 20:52 archetypes/\n-rw-r--r--   1 qingyi  staff  751 Dec  3 20:28 config.toml\ndrwxr-xr-x   3 qingyi  staff   96 Dec  3 12:45 content/\ndrwxr-xr-x   2 qingyi  staff   64 Dec  3 20:52 data/\ndrwxr-xr-x   2 qingyi  staff   64 Dec  3 20:52 layouts/\ndrwxr-xr-x   6 qingyi  staff  192 Dec  6 16:44 orgs/\ndrwxr-xr-x  11 qingyi  staff  352 Aug 31  1754 public/\ndrwxr-xr-x   3 qingyi  staff   96 Dec  3 20:54 resources/\ndrwxr-xr-x   3 qingyi  staff   96 Dec  6 16:43 static/\ndrwxr-xr-x   3 qingyi  staff   96 Dec  3 20:53 themes/\n其中 config.toml 可以调整网站的各种样式于设置，可以参考 hugo 的文档修改。另外需要关注的是 orgs 目录，用来存储所有文章，我采用的是一篇文章对应一个 org 文件的方式， ox-hugo 还支持一个 org 文件中的一部分导出为一个 markdown 文件的方式，这里不多介绍了。另外一个目录是 public 目录，这个目录是 hugo 生成的静态文件的目录。这里我们通过 git submodule 命令，将 public 目录和我们 github pages 的仓库绑定：\n$ git submodule add -b main git@github.com:[GITHUB_USER]/[GITHUB_USER].github.io.git public\n这样，我们每次写完文章，利用 ox-hugo 转换为 markdown 的文章，再直接通过 hugo 命令，重新生成了 public 的目录，再通过 git 将 public 的仓库同步到 Github 就完成了文章的发布。\n撰写文章\n基本的目录结构构建好了之后，就可以开始写文章了，一般来说使用 hugo 来写文章会使用 hugo new posts/[POST_NAME] 的命令在 content/posts/ 的目录中生成文章的模版，模版中主要包括下面的 metadata：\n---\ntitle: &quot;My First Blog&quot;\ndate: 2020-12-06T17:07:57+08:00\ndraft: true\n---\nhugo 在生成静态网页的时候会使用这些 metadata 来生成 categories 和 tags 等信息，所以我们的 org 文件中也要包括这些信息，借助于 ox-hugo 提供的功能，我们可以在 org 文件中直接标注这些信息，如下：\n#+HUGO_BASE_DIR: ../\n#+HUGO_SECTION: posts\n#+HUGO_AUTO_SET_LASTMOD: t\n#+HUGO_TAGS: emacs orgmode hugo github\n#+HUGO_CATEGORIES: computer\n#+HUGO_DRAFT: false\n#+TITLE: 使用orgmode+hugo+github pages搭建博客\n这里要注意 HUGO_BASE_DIR 和 HUGO_SECTION 这两个属性，HUGO_BASE_DIR 是这个 hugo 项目的根目录，在我这个例子中为 personal_blog ，因为我的 org 文件存储在 personal_blog/orgs/ 目录中，所以设置为 ../ 。 HUGO_SECTION 这个属性指定了 ox-hugo 导出的文件在 content 目录中的子目录，这里默认的为 posts 。\n这个 org 文件使用 orgmode 的导出命令，经过 ox-hugo 转换之后，会在 personal_blog/content/posts/ 的目录中生成对应的 markdown 文件，其中的 metadata 会转换为：\n+++\ntitle = &quot;使用orgmode+hugo+github pages搭建博客&quot;\nauthor = [&quot;Qing Yi&quot;]\nlastmod = 2020-12-06T17:13:46+08:00\ntags = [&quot;emacs&quot;, &quot;orgmode&quot;, &quot;hugo&quot;, &quot;github&quot;]\ncategories = [&quot;computer&quot;]\ndraft = false\n+++\n到这一步，我们就完成了文章的撰写和转换的过程。\n文章的发布\n到这一步就非常简单了，利用 hugo 命令会将 content 的内容生成为 html，并全部放入 public 目录，我们进入 public 目录，使用 git commit 和 git push 将最新的 html 推送到 github 就完成了文章的发布。\n这一步可以通过编写 shell 来实现自动化，也可以使用 emacs 的 easy-hugo 来实现自动化。目前我还有研究 easy-hugo 的插件，所以是写了个 deploy.fish 的脚本来做发布，内容如下：\n#! /usr/local/bin/fish\n#我的shell是fish ，如果是bash, zsh可能不能运行/\n \necho &quot;generating new site&quot;\n \nhugo\n \nif test $status != 0\n   echo &quot;fail to generate new site&quot;\n   exit\nend\n \ncd public/\n \necho &quot;commit all changes&quot;\n \ngit add .\n \nset msg echo rebuilding site at (date +&#039;%Y-%m-%d %H:%M&#039;)\n \ngit commit -m &quot;$msg&quot;\n \necho &quot;push to github&quot;\n \ngit push origin main\n相关连接\n\nemacs\norgmode\nox-hugo\nhugo\nhugo quickstart\nhugo with github pages\ngithub pages\n"},"Blogs/经济学综合笔记":{"title":"经济学综合笔记","links":[],"tags":["政治经济"],"content":"\n\n                  \n                  附注 \n                  \n                \n\n文章迁移自旧博客，已不再具有时效性，只是作为存档。\n\n\n为什么会有这个？\n因为一直都对经济学有点儿兴趣，作为一个 IT 行业的从业者，很多人会觉得科学技术是第一生产力，盲目的相信技术可以让世界变的更好，却很少关心除了互联网以外的世界是如何运转的。互联网的发展是一种技术进步，而技术进步确实在各种经济增长模型中都占有很大的比重，但经济增长却不止包含技术进步的部分，人口，资本在其中也扮演着自己的角色。如果我们考察中国历史，会发现经济增长社会进步的主要原因更多的时候是人口的增长与资本的积累。只是在工业时代之后，技术的进步变的更加重要。而作为 IT 行业的从业者如果只关注自身产业的发展，就显得有些管中窥豹以偏概全了。所以当人大在深圳开办在职研究生的课程时，我就机缘巧合的报名了。而这些经济学笔记就是在备考 2020 年的考试的时候根据教材和课程整理的笔记，虽然是针对 2020 年考试，有些非重点的内容有些简略，但姑且可以算作是对经济学相关知识点的整理和线索，为经济学相关内容搭了一个框架，以后可以根据笔记按图索骥补充相关的知识。\n在线的版本\n\n西方经济学\n国际经济学\n货币银行学\n社会主义经济理论\n财政学\n\n供下载的版本\n注意：因为 orgmode latex 中的一些未解决的问题，pdf 中有些公式中的中文丢失了\n\n全部笔记\n\n项目地址\n目前笔记中还有些错误没有更正，有时间会在这个仓库中更新。\ngithub.com/tsingyi/economic_notes"},"Blogs/解决-org-mode-中-LaTeX-数学公式中的中文渲染问题":{"title":"解决 org-mode 中 LaTeX 数学公式中的中文渲染问题","links":[],"tags":["Software/Editor/Emacs","ComputerScience/LaTex"],"content":"历史遗留问题\n我喜欢用 org-mode 来记笔记和写文章，而不是用 markdown 的一个原因是 org-mode 对 \\\\LaTeX 的支持更友好，可以直接使用 $\\LaTex$ 这种方式直接输入，也可以直接使用 \\begin{cases}\\end{cases} 这种方式来直接开始一段跨行的公式输入。除了输入方便， org-mode 更是支持在 emacs 中直接预览输入的数学公式，wysiwyg。但在配置之后我遇到了点小问题，在我使用 org-mode 做一些经济学笔记的时候，我遇到了这样一个公式：\n\\mbox{需求的价格弹性系数} = \\frac{\\mbox{需求的变动率}}{\\mbox{价格的变动率}}\n得到的结果是下面这样的：\n\n这是什么情况？ \\LaTeX 难道不支持中文？我又试着使用 org-export 将整个文档输出成 PDF 看看情况，好家伙，全是方框，不支持中文实锤了。经过一番查证，最后确定问题出现在 org-mode 默认使用的是 pdflatex 来生成最终文档，不支持中文的。解决方案是将默认的使用的 compiler 切换到了 xelatex ，另外添加了一些导出PDF是需要添加的 Headers，终于 PDF 可以正常导出了。但问题没有结束，PDF 中的一般中文没有问题，但是在数学公式中的中文依然像上面一样无法显示。嗯，像不像在修 bug 的你，明明在修一个 bug，却先把另外一个 bug 修好了，原来那个 bug 还在对你微笑。😂\n我又继续查了一些资料，但是 org-mode 中用 \\LaTeX，并且还有中文的人实在有点儿少，要不就是有点儿老。没有找到解决方案，我也发现将文件转换为 html，使用 LaTeX.js 来渲染并没有问题，所以这个问题就暂时搁置了下来。\n问题的解决\n因为最近在使用 brew upgrade 来升级一下系统中的各种工具的时候报了一个错，是在 brew cleanup 的过程中有些文件没有权限删除，我仔细一看，这文件不是 ghostscript 的么，是在捣腾 \\LaTeX 环境的时候通过安装 MacTex 的时候一起安装的，pkg 的安装程序默认用的用户是 root，homebrew 确实没有权限删除，于是我又想起了 org-mode 中还有 preview 无法显示中文公式的 bug，决定这一次把它们一起解决了。\n删除原来的 MacTex\n上次捣腾的时候，为了方便，我直接安装了一个完整的 MacTex，大概有 5G 左右，很多东西都用不上，而且现在和 homebrew 冲突了，所以我决定这次删掉 MacTex，然后通过 homebrew 安装一个精简的 BasicTex。MacTex 的删除不是那么容易，主要分成两个步骤：\n\n\n删除 latex 相关程序和 app，可以参考 MacTex 网站的说明，在这里 Uninstalling MacTex\n\n\n删除 ghostscript, 这个相对麻烦一点。因为要删除 ghostscript 的相关文件，首先你需要知道有哪些 ghostscript 的相关文件，于是需要重新下载一遍 MacTex 的 pkg 安装包，再从安装包中提取获取到具体安装了哪些文件。有人分享了一段 shell，但是我实际使用的时候发现已经不太一样了，这里是我修改的一个版本：\nuninstall_ghostscript () {\n    bom_usr_local=$(pkgutil --bom $1 | grep -F Ghostscript)\n    lsbom -s -f $bom_usr_local | grep -F -v ghostscript | sed &#039;s_^\\.__&#039; | while read filename; do\n\tif [[ -e $filename ]]; then\n\t    command mv - &quot;$filename&quot; ~/.Trash\n\tfi\n    done\n    command mv -v /usr/local/share/ghostscript ~/.Trash\n}\n \nuninstall_ghostscript $1\n\n\n通过 homebrew 安装 BasicTex\n在经历了上面的 MacTex 的删除过程，才能更深的体会到使用 homebrew 来管理软件的方便，直接使用 brew install baisctex ，翘着二郎腿等着结束就完成了。\n解决 org-mode preview 无法显示中文的问题\n在又经过了一番搜索和试错之后，我确定这个问题要分成两个部分解决。\n第一个问题是 latex 本身的问题， xelatex 中在公式环境中插入中文默认都是无法显示的，需要使用 \\mbox{} 来处理，所以我之前的笔记中的公式是不对的，需要在公式中出现中文的地方，都使用 \\mbox{} 来包围才能正常显示，拿文章开头的例子来说明。\n错误的输入方式为：\n$需求的价格弹性系数 = \\frac{需求的变动率}{价格的变动率}$\n正确的输入方式为：\n$\\mbox{需求的价格弹性系数} = \\frac{\\mbox{需求的变动率}}{\\mbox{价格的变动率}}$\n这一部分问题解决之后，使用 org-export 导出的PDF中的中文可以正常显示了，但是在 org-mode 中调用 org-latex-preview 函数依然无法获得正常的结果。\n接着来解决第二个问题，需要修改控制 org-latex-preview 的两个变量：\n\n\norg-preview-latex-process-alist 这个变量是一个列表，列表中每一项都定义了一种 org-latex-prewiew 的处理过程，默认的过程中使用的都是 latex 命令来生成 dvi 文件，在转化为 png 或者 svg 在 emacs 中显示。\n\n\norg-preview-latex-default-process 这个变量定义了 org-latex-preview默认使用的处理过程，需要在 org-preview-latex-process-alist 变量中定义。\n\n\norg-latex-prewiew 函数的大概处理流程为，先查询到当前buffer当前光标下公式开始与结尾，再通过 org-preview-latex-default-process 变量获取到需要使用的处理流程，再通过 org-preview-latex-process-alist 查到对应处理过程需要使用到的命令，最后把公式的插入到一个固定模板，在按照定义好的处理流程将 LaTeX 的代码转化为png或者svg显示在buffer当中。\n明白了这个流程，我们就可以通过下面的设置，新建一个处理流程来解决公式中中文无法显示的问题，具体的代码如下：\n(add-to-list &#039;org-preview-latex-process-alist &#039;(xdvsvgm :progams\n\t\t\t\t\t\t\t(&quot;xelatex&quot; &quot;dvisvgm&quot;)\n\t\t\t\t\t\t\t:discription &quot;xdv &gt; svg&quot;\n\t\t\t\t\t\t\t:message &quot;you need install the programs: xelatex and dvisvgm.&quot;\n\t\t\t\t\t\t\t:image-input-type &quot;xdv&quot;\n\t\t\t\t\t\t\t:image-output-type &quot;svg&quot;\n\t\t\t\t\t\t\t:image-size-adjust (1.7 . 1.5)\n\t\t\t\t\t\t\t:latex-compiler (&quot;xelatex -interaction nonstopmode -no-pdf -output-directory %o %f&quot;)\n\t\t\t\t\t\t\t:image-converter (&quot;dvisvgm %f -n -b min -c %S -o %O&quot;)))\n(setq org-preview-latex-default-process &#039;xdvsvgm)\n这里要注意的是 image-input-type 这个字段的值不为 dvi，而应该是 xdv，xelatex 处理之后的文件后缀为 xdv，再通过 dvisvgm 处理成 svg。\n这样我们终于成功的让 org-mode 支持实时显示含有中文的公式了。\n\n配置 orgmode 的 LaTeX 环境的其他问题\nTex 环境的选择\n目前应该有三种选择：\n\n\n直接安装 MacTex，非常大，功能很全，但是很多用不上，删除也不容易，还和 homebrew 冲突。\n\n\n通过 homebrew 安装 basictex，比起 MacTex，这个不到 100M，所以很多 package 都没有，安装之后还需要安装所需要的 package。具体来说为了能够使用 org-export 导出 PDF 文件，我还安装了如下的 package。\nsudo tlmgr nth\nsudo tlmgr install capt-of\nsudo tlmgr install wrapfig\n \nsudo tlmgr install nth\nsudo tlmgr install ulem xcolor environ letltxmacro enumitem stringenc trimspaces soul algorithm2e genmisc\nsudo tlmgr install epstopdf subfigure appendix\n \nsudo tlmgr install ifmtarg\nsudo tlmgr install multirow ifoddpage relsize titlesec\nsudo tlmgr install xifthen\n\n\n使用 MikTex，这个我并没有了解，不太清楚使用的效果。\n\n\n配置 org-export 使用 xelatex 来做 pdf 的生成\n(setq org-latex-compiler &quot;xelatex&quot;)\n(setq org-latex-pdf-process &#039;(&quot;xelatex %f&quot;))\n(add-to-list &#039;org-latex-default-packages-alist &#039;(&quot;&quot; &quot;ctex&quot; t (&quot;xelatex&quot;)))\n实时的预览 LaTeX 公式\norg-latex-preview 这个函数不是自动调用的，需要使用一个插件 org-fragtog 来让我们离开公式输入的region之后自动调用这个函数生成预览。这里我直接使用 use-package 来管理包的安装。\n(use-package org-fragtog\n  :after org\n  :hook\n  (org-mode . org-fragtog-mode))\n相关的一些链接\n\nMacTex\nMikTex\nuninstall ghostscript\nLaTeX公式中的中文输入\n"},"Blogs/让-Emacs-的-paredit-的编辑快捷键更符合直觉":{"title":"让 Emacs 的 paredit 的编辑快捷键更符合直觉","links":[],"tags":["Software/Editor/Emacs"],"content":"什么是 paredit？\n刚开始使用 lisp 类语言的人大多都会觉得 lisp 中的括号不是很容易看清和分辨，经常写着写着不小心删除了一个 ) 就导致不匹配，如果光标还在删除的位置还好，要是不小心碰到了触控板导致光标移动到了别的地方，那可能就要仔细找找才能找到原来的位置了。这种情况频率不高还好，还有种更困扰的情景是写了一大段代码，代码中间的逻辑可能改了好几次，终于满意了，需要最后把没有写完的 ) 补完，这时候就一个一个小心又小心的注意不能写少也不能写多了。第二种情景不止会在 lisp 类的语言中遇到，任何需要括号来确定作用域的语言其实都会有这个问题，比如 Golang 中的 {} ，只是遇到的频率小很多。\n为了解决这个问题，我们一般都需要借助于结构化的编辑插件，结构化的编辑插件可以分成两个类型。\n\n\n非强制的建议性的补齐插件\n这是一般的编辑器现在普遍存在的功能，在你输入 &quot;, (, { 之后自动补齐 &quot;, ), } 之类的符号，emacs 24 之后提供的 electric-pair-mode 就是这样的实现。这中状态下用户可以任意删除 &quot;, (), {} 等字符，文档中可能出现括号不匹配的状态，需要用户自己去修改。\n\n\n强制要求所有括号匹配的插件\n类似 paredit, lispy, smartparens-strict-mode 的插件，要求在任何时候括号都必须匹配，如果要删除则需要一对同时删除。着保证了我们不需要再担心括号匹配的问题，但会对文档的修改造成一定的限制。\nparedit 应该算是 emacs 上这类插件的鼻祖的了， smartparens 和 lispy 都是借鉴了 paredit 之后增加了一些新功能。我最开始使用的是 smartparens 但是并没有使用强制的模式，使用一段时间过后，其实感觉差别不大，很多功能都没有用到，这样就显得提供的功能太多了。于是我切换到了功能更加纯粹的 paredit 来编辑 lisp 类的代码，而其它模式下使用 emacs 自带的 electric-pair-mode 就完全满足需求了。\n\n\nlisp 类语言编程对 S-exp 常用的操作\n在使用强制括号匹配的插件之后，之前某些通过现删除后括号增加些内容，再添加后括号的操作是被禁止的，因为会导致括号不匹配。所以需要一些同时修改前后括号的操作来完成编辑动作。总结下来在一般的编辑过程中，会频繁的使用下面提到的四种操作。\n\n\nUnwrap, 相当于解包，把一对括号中的内容拿到外面来。我们可以通过下面的例子来说明， | 代表光标所在位置， ---&gt; 上代表操作之前的状态，下代表操作结束后的状态。\n(foo (bar| baz) quux)\n  ---&gt;\n(foo bar| baz quux)\n\n\nWrap，和 Unwrap 对应，相当于封包，把内容封装到一对括号当中，同样使用例子来展示。\n(foo |bar baz)\n  ---&gt;\n(foo (|bar) baz)\n\n\nSlurp, 吃进来，向前或向后扩张当前括号的范围，把括号的前一个或者后一个元素吃到当前的括号当中来。\n\n向后吞并元素\n\n(foo (bar |baz) quux zot)\n  ---&gt;\n(foo (bar |baz quux) zot)\n \n(a b ((c| d)) e f)\n  ---&gt;\n(a b ((c| d) e) f)\n\n向前吞并元素\n\n(foo bar (baz| quux) zot)\n  ---&gt;\n(foo (bar baz| quux) zot)\n \n(a b ((c| d)) e f)\n  ---&gt;\n(a (b (c| d)) e f)\n\n\nBarf, 吐出去，向前或者向后吐出括号内最近的内容，相当于缩小当前的括号范围。\n\n向后吐出元素\n\n(foo (bar |baz quux) zot)\n  ---&gt;\n(foo (bar |baz) quux zot)\n\n向前吐出元素\n\n(foo (bar baz |quux) zot)\n  ---&gt;\n(foo bar (baz |quux) zot)\n\n\nparedit 的默认按键绑定存在的问题\n针对上面常用的四种操作，paredit 中都有对应的函数，并且绑定特定的快捷键，但是使用一段时间我发现这些快捷键的设计缺乏合理的设计隐喻，所以需要死记硬背才能熟练，而且如果一段时间没有使用就多半会忘记，重新用又要再重新记忆一遍，而偏偏我还是个记忆不算好的人，十分的别扭。我们来说说默认的快捷键和存在的问题。\n\n\nUnwrap，对应的快捷键为 M-s, 对应的函数为 paredit-splice-sexp 可以看出这个快捷键的设置完全是根据函数名来设置的，但是对于我来说我和作者对于这一操作的命名不一样，作者认为是把 S-exp 劈开，我认为这个行为更像是把 S-exp 拿出来，因为在对这个 S-exp (foo|) 使用是产生的结果是 foo|, (foo bar |baz quux) 产生的结果是 foo bar |baz quux ，这两种情况下都很难理解 splice 的语义，我认为 unwrap 的描述更准确。这就导致我在使用这个命令时需要转换，我想做一个我认为是 unwrap 的操作，需要想到用的函数是 splice，所以快捷键是 M-s 。\n\n\nWrap，对应的快捷键为 M-( ，对应的函数为 paredit-wrap-round ，看起来没什么问题，用括号包起来嘛。但在使用中会有两个不好的点，第一，( 是需要按住 shift 才能打出的符号，也就是说我实际是要按三个按键；第二，如果我的光标在这个位置 bar| 快捷键确实 ( ，这里也存在着隐喻的转换， /当然如果你实际在这个位置使用这个命令，目前的 paredit 会是这样的结果 bar () / 。另外还有一个问题就是这个命名和 unwrap 是有对应关系的，当在快捷键的设计上缺完全没有考虑，造成了更多的记忆负担。\n\n\nBarf &amp; Slurp，这两个动作实际对应了四个操作，paredit 在这四个操作的快捷键设计上我认为作者是有思考的，有自己的逻辑，原有的键位设置比起一些 paredit 的设置分享上改为 M-{, M-[ 之类的好上非常多，我不是很理解那些设置分享的人是通过怎样的模型来记忆这几个操作的。\n在默认的设置中，作者是按照操作的位置来区分的 C 键代表操作右边的括号：\n\n\nC-&lt;right&gt; 就是向后吞元素，右边括号继续往右移动，调用的函数为 paredit-forward-slurp-sexp , 非常直观，这也是我没有调整之前记得最清楚的操作，有时候其它操作都要转化成这个操作来完成。\n\n\nC-&lt;left&gt; 同样操作右边括号，向后吐出元素，右边括号向左边移动，调用函数 paredit-forward-barf-sexp , 注意这里有个点是函数名里有个 forward，但我们的括号实际在往左边移动，这是 barf 的语义造成的问题，在我们使用快捷键，不用想函数名时不会有困扰。\n\n\n然后默认设置中 C-M 键代表了操作左括号：\n\n\nC-M-&lt;left&gt; 就是向前吞并元素，左边的括号继续往左移动，调用的函数为 paredit-backward-slurp-sexp 。\n\n\nC-M-&lt;right&gt; 就是向前吐出元素，左边的括号向右边移动，调用函数paredit-backward-barf-sexp 。\n\n\n我认为 Barf &amp; Slurp 这组快捷键是作者经过精心设计的，比较的直观并且有自己的操作逻辑，比起 un/wrap 的键位设计好很多，也更容易记住。但是我不满意的点在于，我直觉上更倾向于把 slurp 的操作看作一组，barf 的操作看做另外一组，而不是把针对左括号的操作看作一组，针对右括号的操作看作一组。在实际操作中，左右括号的位置也会随着操作发生改变，虽然和方向键的方向一致，但是还是会有中模型的原点在不断移动的感觉。另外在 emacs 中，C 和 C-M 代表同一层级的操作对象也不符合 emacs 的直觉，举个例子是 C-f 移动一个字符，M-f 移动一个单词，C-M-f 移动一个 sexp，之间是有层级关系的模型存在。\n\n\n基于 control, meta 和方向键的解决方案\n说完了默认绑定的键位问题，来说说我的改进方案。\n首先把 unwrap &amp; wrap 这两个操作看做一组，分别绑定为 unwrap: M-&lt;up&gt;, wrap: M-&lt;down&gt; 。可以理解为 wrap 就是向下把 sexp 放到括号这个盒子里，uwrap 就是向上把 sexp 从括号这个盒子里拿出来。\n其次把 slurp 的操作看作一组，把 barf 的操作看作另一组，而放弃绑定到左右括号上。\nSlurp 的操作全部绑定到 C 上，要吞掉后面的元素，使用 C-&lt;right&gt; 。C 表示吞，方向指向要吞掉元素。同理向前吞就使用 C-&lt;left&gt; 。\nBarf 的操作全部绑定到 M 上，要吐掉后面的元素，使用 M-&lt;right&gt; , M 表示吐，方向指向要吐出的元素。同理向前吐就使用 M-&lt;left&gt; 。这里的操作方向和括号的移动方向是相反的，但是我们的心理模型并不是绑定到括号的移动方向上，可以这么立即，吐出去肚子会变小，所以括号会往里缩紧。\n下面是调整完后的配置代码：\n(use-package paredit\n  :delight &quot; Par&quot;\n  :bind\n  (:map paredit-mode-map\n\t(&quot;M-&lt;up&gt;&quot; . paredit-splice-sexp)\n\t(&quot;M-&lt;down&gt;&quot; . paredit-wrap-round)\n\t(&quot;C-&lt;right&gt;&quot; . paredit-forward-slurp-sexp)\n\t(&quot;C-&lt;left&gt;&quot; . paredit-backward-slurp-sexp)\n\t(&quot;M-&lt;left&gt;&quot; . paredit-backward-barf-sexp)\n\t(&quot;M-&lt;right&gt;&quot; . paredit-forward-barf-sexp))\n  :hook ((emacs-lisp-mode . paredit-mode)\n\t (scheme-mode . paredit-mode))\n  :config\n  (define-key paredit-mode-map (kbd &quot;M-s&quot;) nil)\n  (define-key paredit-mode-map (kbd &quot;M-?&quot;) nil))"},"Blogs/重新搭建个人博客":{"title":"重新搭建个人博客","links":[],"tags":[],"content":"\n\n                  \n                  附注 \n                  \n                \n\n文章迁移自旧博客，已不再具有时效性，只是作为存档。\n\n\n为什么要搭博客？\n说来惭愧，其实很早之前，可能是 Github Pages 刚开始的时候，我就试着用 Jekyll 搭建过自己的博客。但是结果就是捣鼓了一遍 Jekyll 相关的工具链，学了学 ruby，网上找了各种主题，试了又试（自己的博客嘛，首先一定要好看才行），最后搞来搞去还是用了最初Github Pages的主题总算是把项目搭起来了， 然后放上了Github，然后，就没有然后了、、、我没有写博客的习惯，所以一直没有内容，出生就夭折。\n这件事情，总结起来，有种“得术而忘道”的感觉，我们都喜欢去追新的技术，希望自己用的东西越时髦越好，心中总是有种新的工具一定比我现在用的东西好，只要我学会了一定比现在厉害许多，可以轻松的解决我现在不轻松的才能解决的问题。比如当初我觉得我写不好长篇的文章，一定是因为我没有个时髦的可以很炫酷的把你写的文章变成漂亮网页的博客工具，所以花时间尝试了各种工具，最后却没有养成写博客的习惯，因为我一开始的问题就偏了，我应该要学的是如何写出好的文章，而不是造出写文章的笔。\n这问题其实在写代码的行业挺普遍的，写代码的人都对新的事物，特别是新的技术，有着一种超乎其他人的好奇。并且，对稍微有点旧的技术有种不由自主的嫌弃。要是工作中遇到旧一点的技术，就会把大部分的 bug 和开发的不便利归因于陈旧的技术，然后不遗余力的想用新的技术替代旧的技术，最后造出更多的 bug。\n扯远了，收～\n回到博客的话题，为什么现在想重新把自己的博客搭建起来。这问题可以分成两个方面来回答：\n一个方面是个人需求，除开交作业，工作上写文档，我太习惯知识的输入，而十分缺少输出。这种输入造成的一个问题就是，知识输入之后其实并没有在自己脑子了仔细融汇贯通，学了好多的课，读了一些书，看了大量的视频课，但是没有总结成体系，看别人输出的时候可劲儿点头：“嗯嗯，和我想的一样”，但是一旦自己想要输出自己观点的时候就卡壳：“哎呀，这个观点应该怎么解释来着”，“哎呀，这个我应该懂，之前看过的，应该怎么做来着”。这种问题的原因，一个是没有融汇贯通形成自己内在的观点，一个是缺少了表达的练习和实践，所以我想通过写文章的方式来帮助自己更好的理解学到知识，同时也是一种表达的练习。\n另外一个方面是现在的社会，我们太习惯短的碎片的东西。互联网早期的时候，我们写博客来表达自己的想法，后来140字的推特微博来了，消息变短让信息的传递速度变快了，内容和深度变少了，大家都爱段子手。到了现在，短视频火了，信心的沉浸感更强了，但是内容更少，20分钟看20个视频段子，哈哈哈哈，好欢乐～，但是真的不能在自己脑子里面留下什么东西。我们交流的方式也变了，以前是写信，异地的情侣可以在一封信里表达出他（她）一个月的思念，后来我们打电话，一个小时的电话粥还夹着嘟嘟的电流声传递着对方的甜言蜜语，现在我们电话也不打了，微信QQ里面用表情就可以吵架。这种表达方式的碎片化消弭了我们组织和总结自己思想的动力，我们习惯飞快地小而碎的表达，从而缺乏了深思熟虑考虑全面的表达自己思想。所以我想通过重新开始写文章这种办法来在这个碎片的时代保持一个独立思考的手段。\n往后博客的主要内容\n目前还没有详细的更新计划，但今后博客的主题应该主要会包含下面几个内容：\n\n\n计算机相关，毕竟我是个写代码的人。\n\n\n经济相关，一直是我关心的领域，工作后读的研究生也是世界经济，想要理解驱动世界运行的经济逻辑。\n\n\n读书笔记。\n\n\n某些游戏的杂谈。“十年索狗，百年任豚”，玩笑了，第九艺术正在默默的改造这我们这个时代。\n\n\n猫片（家里猫主子日记）\n\n\n结束\n文章最后给自己打个气,\n望我们在这个碎片的时代能始终保持独立的思考。"},"Quick-References/Editor-Config-File":{"title":"Editor Config File","links":["VIM"],"tags":["Reference","Programming/Editor"],"content":"EditorConfig 在支持他的编辑器中可以为项目中各种类型的文件单独设置缩进的策略，比如在 .go 文件中使用 tab 缩进，而在同项目的 .html 中适用两格空格缩进。\n当然，这个需要编辑器的支持，Neovim 是支持的，这样在 neovim 的全局设置中可以设置为默认是四格空格缩进，而在项目中为 html, yaml 等文件单独设置为两格空格缩进，不需要手动切换。\n使用的方法就是在项目的根目录放入一个 toml 格式的 .editorconfig 配置文件。\n一个简单的例子\n# content of .editorconfig file\n \n# top-most EditorConfig file\nroot = true\n \n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n \n# Matches multiple files with brace expansion notation\n# Set default charset\n[*.{js,py}]\ncharset = utf-8\n \n# 4 space indentation\n[*.py]\nindent_style = space\nindent_size = 4\n \n# Tab indentation (no size specified)\n[Makefile]\nindent_style = tab\n \n# Indentation override for all JS under lib directory\n[lib/**.js]\nindent_style = space\nindent_size = 2\n \n# Matches the exact files either package.json or .travis.yml\n[{package.json,.travis.yml}]\nindent_style = space\nindent_size = 2\n文件匹配模式\n文件中的 section name 支持模式匹配，有以下语法：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatterneffect*Matches any string of characters, except path separators (/)**Matches any string of characters?Matches any single character[name]Matches any single character in name[!name]Matches any single character not in name{s1,s2,s3}Matches any of the strings given (separated by commas)  (Available since EditorConfig Core 0.11.0){num1..num2}Matches any integer numbers between num1 and num2,  where num1 and num2 can be either positive or negative\n支持的控制属性\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeySupported valuesindent_styleSet to tab or space to use hard tabs or soft tabs respectively. The values are case insensitive.indent_sizeSet to a whole number defining the number of columns used for each indentation level and the width of soft tabs (when supported). If this equals tab, the indent_size shall be set to the tab size, which should be tab_width (if specified); else, the tab size set by the editor. The values are case insensitive.tab_widthSet to a whole number defining the number of columns used to represent a tab character. This defaults to the value of indent_size and should not usually need to be specified.end_of_lineSet to lf, cr, or crlf to control how line breaks are represented. The values are case insensitive.charsetSet to latin1, utf-8, utf-8-bom, utf-16be or utf-16le to control the character set. Use of utf-8-bom is discouraged.spelling_languageSets the natural language that should be used for spell checking. Only one language can be specified. There is no default value.The format is ss or ss-TT, where ss is an ISO 639 language code and TT is an ISO 3166 territory identifier.Note: This property does not specify the charset to be used. The charset is in separate property charset.trim_trailing_whitespaceSet to true to remove all whitespace characters preceding newline characters in the file and false to ensure it doesn’t.insert_final_newlineSet to true ensure file ends with a newline when saving and false to ensure it doesn’t.rootMust be specified in the preamble. Set to true to stop the .editorconfig file search on the current file. The value is case insensitive.\n更完整的清单可以在这里找到。"},"Quick-References/LaTeX-Quick-Reference":{"title":"LaTeX Quick Reference","links":[],"tags":["Reference","ComputerScience/LaTex"],"content":"1 数学公式编辑 Displaying a formula\n1.1 符号与字母 Symbol and Alphabet\n1.1.1 希腊字母 Greek alphabet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号小写LaTeX读音序号大写LaTeX读音1\\alpha\\alpha/ˈælfə/31\\Gamma\\Gamma/ˈɡæmə/2\\beta\\beta/ˈbiːtə/, US: /ˈbeɪtə/32\\Delta\\Delta/ˈdɛltə/3\\gamma\\gamma/ˈɡæmə/33\\Theta\\Theta/ˈθiːtə/4\\delta\\delta/ˈdɛltə/34\\Lambda\\Lambda/ˈlæmdə/5\\epsilon\\epsilon/ˈɛpsɪlɒn/35\\Xi\\Xi/zaɪ, ksaɪ/6\\varepsilon\\varepsilon/ˈɛpsɪlɒn/36\\Pi\\Pi/paɪ/7\\zeta\\zeta/ˈzeɪtə/37\\Sigma\\Sigma/ˈsɪɡmə/8\\eta\\eta/ˈeɪtə/38\\Upsilon\\Upsilon/ˈʌpsɪlɒn/9\\theta\\theta/ˈθiːtə/39\\Phi\\Phi/faɪ/10\\vartheta\\vartheta/ˈθiːtə/40\\Psi\\Psi/psaɪ/11\\iota\\iota/aɪˈoʊtə/41\\Omega\\Omega/oʊˈmeɪɡə/12\\kappa\\kappa/ˈkæpə/13\\lambda\\lambda/ˈlæmdə/14\\mu\\mu/mjuː/15\\nu\\nu/njuː/16\\xi\\xi/zaɪ, ksaɪ/17oo/ˈɒmɪkrɒn/18\\pi\\pi/paɪ/19\\varpi\\varpi/paɪ/20\\rho\\rho/roʊ/21\\varrho\\varrho/roʊ/22\\sigma\\sigma/ˈsɪɡmə/23\\varsigma\\varsigma/ˈsɪɡmə/24\\tau\\tau/taʊ, tɔː/25\\upsilon\\upsilon/ˈʌpsɪlɒn/26\\phi\\phi/faɪ/27\\varphi\\varphi/faɪ/28\\chi\\chi/kaɪ/29\\psi\\psi/psaɪ/30\\omega\\omega/oʊˈmeɪɡə/\n\n\n                  \n                  注意 \n                  \n                \n\nMathJax 支持的大写希腊字母有限，如需其他（如大写 Alpha），可使用罗马体转换，如\\mathrm{A}表示大写 Alpha：\\mathrm{A}。\n\n\n1.1.2 希伯来字母 Hebrew alphabet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX英文1\\aleph\\alephaleph2\\beth\\bethbeth3\\gimel\\gimelgimel4\\daleth\\dalethdaleth\n1.1.3 二元运算符 Binary operations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1++20\\bullet\\bullet2−-21\\oplus\\oplus3\\times\\times22\\ominus\\ominus4\\div\\div (在 physics 扩展开启状态下为)23\\odot\\odot5\\pm\\pm24\\oslash\\oslash6\\mp\\mp25\\otimes\\otimes7\\triangleleft\\triangleleft26\\bigcirc\\bigcirc8\\triangleright\\triangleright27\\diamond\\diamond9\\cdot\\cdot28\\uplus\\uplus10\\setminus\\setminus29\\bigtriangleup\\bigtriangleup11\\star\\star30\\bigtriangledown\\bigtriangledown12\\ast\\ast31\\lhd\\lhd13\\cup\\cup32\\rhd\\rhd14\\cap\\cap33\\unlhd\\unlhd15\\sqcup\\sqcup34\\unrhd\\unrhd16\\sqcap\\sqcap35\\amalg\\amalg17\\vee\\vee36\\wr\\wr18\\wedge\\wedge37\\dagger\\dagger19\\circ\\circ38\\ddagger\\ddagger\n1.1.4 二元关系符 Binary relations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1==49\\gneq\\gneq2\\ne\\ne50\\geqq\\geqq3\\neq\\neq51\\ngeq\\ngeq4\\equiv\\equiv52\\ngeqq\\ngeqq5\\not\\equiv\\not\\equiv53\\gneqq\\gneqq6\\doteq\\doteq54\\gvertneqq\\gvertneqq7\\doteqdot\\doteqdot55\\lessgtr\\lessgtr8\\overset{\\underset{\\mathrm{def}}{}}{=}\\overset{\\underset{\\mathrm{def}}{}}{=}56\\lesseqgtr\\lesseqgtr9:=:=57\\lesseqqgtr\\lesseqqgtr10\\sim\\sim58\\gtrless\\gtrless11\\nsim\\nsim59\\gtreqless\\gtreqless12\\backsim\\backsim60\\gtreqqless\\gtreqqless13\\thicksim\\thicksim61\\leqslant\\leqslant14\\simeq\\simeq62\\nleqslant\\nleqslant15\\backsimeq\\backsimeq63\\eqslantless\\eqslantless16\\eqsim\\eqsim64\\geqslant\\geqslant17\\cong\\cong65\\ngeqslant\\ngeqslant18\\ncong\\ncong66\\eqslantgtr\\eqslantgtr19\\approx\\approx67\\lesssim\\lesssim20\\thickapprox\\thickapprox68\\lnsim\\lnsim21\\approxeq\\approxeq69\\lessapprox\\lessapprox22\\asymp\\asymp70\\lnapprox\\lnapprox23\\propto\\propto71\\gtrsim\\gtrsim24\\varpropto\\varpropto72\\gnsim\\gnsim25&lt;&lt;73\\gtrapprox\\gtrapprox26\\nless\\nless74\\gnapprox\\gnapprox27\\ll\\ll75\\prec\\prec28\\not\\ll\\not\\ll76\\nprec\\nprec29\\lll\\lll77\\preceq\\preceq30\\not\\lll\\not\\lll78\\npreceq\\npreceq31\\lessdot\\lessdot79\\precneqq\\precneqq32&gt;&gt;80\\succ\\succ33\\ngtr\\ngtr81\\nsucc\\nsucc34\\gg\\gg82\\succeq\\succeq35\\not\\gg\\not\\gg83\\nsucceq\\nsucceq36\\ggg\\ggg84\\succneqq\\succneqq37\\not\\ggg\\not\\ggg85\\preccurlyeq\\preccurlyeq38\\gtrdot\\gtrdot86\\curlyeqprec\\curlyeqprec39\\le\\le87\\succcurlyeq\\succcurlyeq40\\leq\\leq88\\curlyeqsucc\\curlyeqsucc41\\lneq\\lneq89\\precsim\\precsim42\\leqq\\leqq90\\precnsim\\precnsim43\\nleq\\nleq91\\precapprox\\precapprox44\\nleqq\\nleqq92\\precnapprox\\precnapprox45\\lneqq\\lneqq93\\succsim\\succsim46\\lvertneqq\\lvertneqq94\\succnsim\\succnsim47\\ge\\ge95\\succapprox\\succapprox48\\geq\\geq96\\succnapprox\\succnapprox\n1.1.5 几何符号 Geometric symbols\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1\\parallel\\parallel14\\lozenge\\lozenge2\\nparallel\\nparallel15\\blacklozenge\\blacklozenge3\\shortparallel\\shortparallel16\\bigstar\\bigstar4\\nshortparallel\\nshortparallel17\\bigcirc\\bigcirc5\\perp\\perp18\\triangle\\triangle6\\angle\\angle19\\bigtriangleup\\bigtriangleup7\\sphericalangle\\sphericalangle20\\bigtriangledown\\bigtriangledown8\\measuredangle\\measuredangle21\\vartriangle\\vartriangle9\\circ45^\\circ22\\triangledown\\triangledown10\\Box\\Box23\\blacktriangle\\blacktriangle11\\blacksquare\\blacksquare24\\blacktriangledown\\blacktriangledown12\\diamond\\diamond25\\blacktriangleleft\\blacktriangleleft13\\Diamond\\Diamond \\lozenge26\\blacktriangleright\\blacktriangleright\n1.1.6 逻辑符号 Logic symbols\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1\\forall\\forall20\\neg\\neg2\\exists\\exists21\\not\\operatorname{R}\\not\\operatorname{R}3\\nexists\\nexists22\\bot\\bot4\\therefore\\therefore23\\top\\top5\\because\\because24\\vdash\\vdash6\\And\\And25\\dashv\\dashv7\\lor\\lor26\\vDash\\vDash8\\vee\\vee27\\Vdash\\Vdash9\\curlyvee\\curlyvee28\\models\\models10\\bigvee\\bigvee29\\Vvdash\\Vvdash11\\land\\land30\\nvdash\\nvdash12\\wedge\\wedge31\\nVdash\\nVdash13\\curlywedge\\curlywedge32\\nvDash\\nvDash14\\bigwedge\\bigwedge33\\nVDash\\nVDash15\\bar{q}\\bar{q}34\\ulcorner\\ulcorner16\\bar{abc}\\bar{abc}35\\urcorner\\urcorner17\\overline{q}\\overline{q}36\\llcorner\\llcorner18\\overline{abc}\\overline{abc}37\\lrcorner\\lrcorner19\\lnot\\lnot\n1.1.7 集合 Sets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1{}{}23\\sqsubset\\sqsubset2\\emptyset\\emptyset24\\supset\\supset3\\varnothing\\varnothing25\\Supset\\Supset4\\in\\in26\\sqsupset\\sqsupset5\\notin\\notin27\\subseteq\\subseteq6\\ni\\ni28\\nsubseteq\\nsubseteq7\\cap\\cap29\\subsetneq\\subsetneq8\\Cap\\Cap30\\varsubsetneq\\varsubsetneq9\\sqcap\\sqcap31\\sqsubseteq\\sqsubseteq10\\bigcap\\bigcap32\\supseteq\\supseteq11\\cup\\cup33\\nsupseteq\\nsupseteq12\\Cup\\Cup34\\supsetneq\\supsetneq13\\sqcup\\sqcup35\\varsupsetneq\\varsupsetneq14\\bigcup\\bigcup36\\sqsupseteq\\sqsupseteq15\\bigsqcup\\bigsqcup37\\subseteqq\\subseteqq16\\uplus\\uplus38\\nsubseteqq\\nsubseteqq17\\biguplus\\biguplus39\\subsetneqq\\subsetneqq18\\setminus\\setminus40\\varsubsetneqq\\varsubsetneqq19\\smallsetminus\\smallsetminus41\\supseteqq\\supseteqq20\\times\\times42\\nsupseteqq\\nsupseteqq21\\subset\\subset43\\supsetneqq\\supsetneqq22\\Subset\\Subset44\\varsupsetneqq\\varsupsetneqq\n1.1.8 箭头 Arrows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1\\Rrightarrow\\Rrightarrow36\\longmapsto\\longmapsto2\\Lleftarrow\\Lleftarrow37\\rightharpoonup\\rightharpoonup3\\Rightarrow\\Rightarrow38\\rightharpoondown\\rightharpoondown4\\nRightarrow\\nRightarrow39\\leftharpoonup\\leftharpoonup5\\Longrightarrow\\Longrightarrow40\\leftharpoondown\\leftharpoondown6\\implies\\implies41\\upharpoonleft\\upharpoonleft7\\Leftarrow\\Leftarrow42\\upharpoonright\\upharpoonright8\\nLeftarrow\\nLeftarrow43\\downharpoonleft\\downharpoonleft9\\Longleftarrow\\Longleftarrow44\\downharpoonright\\downharpoonright10\\Leftrightarrow\\Leftrightarrow45\\rightleftharpoons\\rightleftharpoons11\\nLeftrightarrow\\nLeftrightarrow46\\leftrightharpoons\\leftrightharpoons12\\Longleftrightarrow\\Longleftrightarrow47\\curvearrowleft\\curvearrowleft13\\iff\\iff48\\circlearrowleft\\circlearrowleft14\\Uparrow\\Uparrow49\\Lsh\\Lsh15\\Downarrow\\Downarrow50\\upuparrows\\upuparrows16\\Updownarrow\\Updownarrow51\\rightrightarrows\\rightrightarrows17\\rightarrow\\rightarrow52\\rightleftarrows\\rightleftarrows18\\to\\to53\\rightarrowtail\\rightarrowtail19\\nrightarrow\\nrightarrow54\\looparrowright\\looparrowright20\\longrightarrow\\longrightarrow55\\curvearrowright\\curvearrowright21\\leftarrow\\leftarrow56\\circlearrowright\\circlearrowright22\\gets\\gets57\\Rsh\\Rsh23\\nleftarrow\\nleftarrow58\\downdownarrows\\downdownarrows24\\longleftarrow\\longleftarrow59\\leftleftarrows\\leftleftarrows25\\leftrightarrow\\leftrightarrow60\\leftrightarrows\\leftrightarrows26\\nleftrightarrow\\nleftrightarrow61\\leftarrowtail\\leftarrowtail27\\longleftrightarrow\\longleftrightarrow62\\looparrowleft\\looparrowleft28\\uparrow\\uparrow63\\hookrightarrow\\hookrightarrow29\\downarrow\\downarrow64\\hookleftarrow\\hookleftarrow30\\updownarrow\\updownarrow65\\multimap\\multimap31\\nearrow\\nearrow66\\leftrightsquigarrow\\leftrightsquigarrow32\\swarrow\\swarrow67\\rightsquigarrow\\rightsquigarrow33\\nwarrow\\nwarrow68\\twoheadrightarrow\\twoheadrightarrow34\\searrow\\searrow69\\twoheadleftarrow\\twoheadleftarrow35\\mapsto\\mapsto\n1.1.9 特殊 Special\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号图标LaTeX序号图标LaTeX1\\infty\\infty33\\flat\\flat2\\aleph\\aleph34\\natural\\natural3\\complement\\complement35\\sharp\\sharp4\\backepsilon\\backepsilon36\\diagup\\diagup5\\eth\\eth37\\diagdown\\diagdown6\\Finv\\Finv38\\centerdot\\centerdot7\\hbar\\hbar39\\ltimes\\ltimes8\\Im\\Im40\\rtimes\\rtimes9\\imath\\imath41\\leftthreetimes\\leftthreetimes10\\jmath\\jmath42\\rightthreetimes\\rightthreetimes11\\Bbbk\\Bbbk43\\eqcirc\\eqcirc12\\ell\\ell44\\circeq\\circeq13\\mho\\mho45\\triangleq\\triangleq14\\wp\\wp46\\bumpeq\\bumpeq15\\Re\\Re47\\Bumpeq\\Bumpeq16\\circledS\\circledS48\\doteqdot\\doteqdot17\\amalg\\amalg49\\risingdotseq\\risingdotseq18\\%\\%50\\fallingdotseq\\fallingdotseq19\\dagger\\dagger51\\intercal\\intercal20\\ddagger\\ddagger52\\barwedge\\barwedge21\\ldots\\ldots53\\veebar\\veebar22\\cdots\\cdots54\\doublebarwedge\\doublebarwedge23\\smile\\smile55\\between\\between24\\frown\\frown56\\pitchfork\\pitchfork25\\wr\\wr57\\vartriangleleft\\vartriangleleft26\\triangleleft\\triangleleft58\\ntriangleleft\\ntriangleleft27\\triangleright\\triangleright59\\vartriangleright\\vartriangleright28\\diamondsuit\\diamondsuit60\\ntriangleright\\ntriangleright29\\heartsuit\\heartsuit61\\trianglelefteq\\trianglelefteq30\\clubsuit\\clubsuit62\\ntrianglelefteq\\ntrianglelefteq31\\spadesuit\\spadesuit63\\trianglerighteq\\trianglerighteq32\\Game\\Game64\\ntrianglerighteq\\ntrianglerighteq\n1.2 运算与函数 Operations &amp; Functions\n1.2.1 分数 Fractions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n类型样式LaTeX分数 Fractions\\frac{2}{4}x=0.5x\\frac{2}{4}x=0.5x or {2 \\over 4}x=0.5x小型分数 Small fractions (force \\textstyle)\\tfrac{2}{4}x\\tfrac{2}{4}x = 0.5x大型分数（不嵌套） Large (normal) fractions (force \\displaystyle)\\dfrac{2}{4}\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a大型分数（嵌套） Large (nested) fractions\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a约分线的使用 Cancellations in fractions\\cfrac{x}{1 + \\cfrac{\\cancel{y}}{\\cancel{y}}} = \\cfrac{x}{2}\\cfrac{x}{1 + \\cfrac{\\cancel{y}}{\\cancel{y}}} = \\cfrac{x}{2}\n注意：  其中\\cancel命令需要cancel 扩展包支持，cancel 扩展包是一款自定义宏包，如需使用请在公式页面右上角【设置】页面勾选后使用。\n1.2.2 标准数值函数 Standard numerical functions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX\\exp_a b = a^b, \\exp b = e^b, 10^m\\exp_a b = a^b, \\exp b = e^b, 10^m\\ln c, \\lg d = \\log e, \\log\\_{10} f\\ln c, \\lg d = \\log e, \\log_{10} f\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\\arcsin a, \\arccos b, \\arctan c\\arcsin a, \\arccos b, \\arctan c\\operatorname{arccot} d, \\operatorname{arcsec} e, \\operatorname{arccsc} f\\operatorname{arccot} d, \\operatorname{arcsec} e, \\operatorname{arccsc} f\\sinh a, \\cosh b, \\tanh c, \\coth d\\sinh a, \\cosh b, \\tanh c, \\coth d\\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n\\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n\\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q\\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q\\operatorname{sgn}r, \\left\\vert s \\right\\vert\\operatorname{sgn}r, \\left\\vert s \\right\\vert\\min(x,y), \\max(x,y)\\min(x,y), \\max(x,y)\n\n\n                  \n                  Tip\n                  \n                \n\nLaTeX 和 MathJax 支持的操作符有限，如有特殊操作符，可以使用\\operatorname{}  命令自定义，例如\n\\operatorname{mydefine}x\n\n\n\n1.2.3 根式 Radicals\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX\\surd\\surd\\sqrt{\\pi}\\sqrt{\\pi}\\sqrt[n]{\\pi}\\sqrt[n]{\\pi}\\sqrt[3]{\\frac{x^3+y^3}{2}}\\sqrt[3]{\\frac{x^3+y^3}{2}}\n1.2.4 微分与导数 Differentials and derivatives\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeXdt, \\mathrm{d}t, \\partial t, \\nabla\\psidt, \\mathrm{d}t, \\partial t, \\nabla\\psidy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}ydy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y\\prime, \\backprime, f^\\prime, f&#039;, f&#039;&#039;, f^{(3)}, \\dot y, \\ddot y\\prime, \\backprime, f^\\prime, f’, f”, f^{(3)}, \\dot y, \\ddot y\n1.2.5 同余与模算术 Modular arithmetic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeXs_k \\equiv 0 \\pmod{m}s_k \\equiv 0 \\pmod{m}a \\bmod ba \\bmod b\\gcd(m, n), \\operatorname{lcm}(m, n)\\gcd(m, n), \\operatorname{lcm}(m, n)\\mid, \\nmid, \\shortmid, \\nshortmid\\mid, \\nmid, \\shortmid, \\nshortmid\n1.2.6 极限 Limits\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX\\lim_{n \\to \\infty}x_n\\lim_{n \\to \\infty}x_n\\textstyle \\lim_{n \\to \\infty}x_n\\textstyle \\lim_{n \\to \\infty}x_n\n1.2.7 界限与投影 Bounds and Projections\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX\\min x, \\max y, \\inf s, \\sup t\\min x, \\max y, \\inf s, \\sup t\\lim u, \\liminf v, \\limsup w\\lim u, \\liminf v, \\limsup w\\dim p, \\deg q, \\det m, \\ker\\phi\\dim p, \\deg q, \\det m, \\ker\\phi\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z\n1.2.8 积分 Integral\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX\\int\\limits\\_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\int\\limits_{1}^{3}\\frac{e^3/x}{x^2}, dx\\int\\_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\int_{1}^{3}\\frac{e^3/x}{x^2}, dx\\textstyle \\int\\limits\\_{-N}^{N} e^x dx\\textstyle \\int\\limits_{-N}^{N} e^x dx\\textstyle \\int\\_{-N}^{N} e^x dx\\textstyle \\int_{-N}^{N} e^x dx\\iint\\limits_D dx\\,dy\\iint\\limits_D dx,dy\\iiint\\limits_E dx\\,dy\\,dz\\iiint\\limits_E dx,dy,dz\\iiiint\\limits_F dx\\,dy\\,dz\\,dt\\iiiint\\limits_F dx,dy,dz,dt\\int\\_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\int_{(x,y)\\in C} x^3, dx + 4y^2, dy\\oint\\_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\oint_{(x,y)\\in C} x^3, dx + 4y^2, dy\n\n\n                  \n                  Attention\n                  \n                \n\n积分符号可以使用\\int_{}^{}命令调用，如需双重积分符号只需将int替换成iint即可，以此类推，最高支持四重。曲线积分可使用\\oint命令调用，但曲面积分符号在 MathJax 环境中并不支持\\oiint的用法，但仍可通过\\unicode{}命令，即 Unicode 代码的方式进行调用（前提是您需要在设置中打开 Unicode 扩展），具体使用方法如下：\n\\unicode{8751} \\unicode{x222F}_C %曲面积分符号的Unicode码十进制为8751,十六进制为x222F(注意x标识符)\n\n\n\n                  \n                  Example\n                  \n                \n\n\\unicode{8751} \\unicode{x222F}_C\n\n\n\\unicode{8752} \\unicode{x2230}_C %三维曲面积分符号的Unicode码十进制为8752,十六进制为x2230\n\n\n\n                  \n                  Example\n                  \n                \n\n\\unicode{8752} \\unicode{x2230}_C\n\n\n其他积分符号：\n\\unicode{8753} \\unicode{x2231}_c\n         \\unicode{8754} \\unicode{x2232}_c\n         \\unicode{8755} \\unicode{x2233}_c\n\n\n\n                  \n                  Example\n                  \n                \n\n\\unicode{8753} \\unicode{x2231}_c\n         \\unicode{8754} \\unicode{x2232}_c\n         \\unicode{8755} \\unicode{x2233}_c\n\n\n\n\n1.2.9 其他大型运算 Large operators\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n类别样式LaTeX求和 Summation\\sum_{a}^{b}\\sum_{a}^{b}求和 Summation\\textstyle \\sum_{a}^{b}\\textstyle \\sum_{a}^{b}连乘积 Product\\prod_{a}^{b}\\prod_{a}^{b}连乘积 Product\\textstyle \\prod_{a}^{b}\\textstyle \\prod_{a}^{b}余积 Coproduct\\coprod_{a}^{b}\\coprod_{a}^{b}余积 Coproduct\\textstyle \\coprod_{a}^{b}\\textstyle \\coprod_{a}^{b}并集 Union\\bigcup_{a}^{b}\\bigcup_{a}^{b}并集 Union\\textstyle \\bigcup_{a}^{b}\\textstyle \\bigcup_{a}^{b}交集 Intersection\\bigcap_{a}^{b}\\bigcap_{a}^{b}交集 Intersection\\textstyle \\bigcap_{a}^{b}\\textstyle \\bigcap_{a}^{b}析取 Disjunction\\bigvee_{a}^{b}\\bigvee_{a}^{b}析取 Disjunction\\textstyle \\bigvee_{a}^{b}\\textstyle \\bigvee_{a}^{b}合取 Conjunction\\bigwedge_{a}^{b}\\bigwedge_{a}^{b}合取 Conjunction\\textstyle \\bigwedge_{a}^{b}\\textstyle \\bigwedge_{a}^{b}\n1.3 上下标 Sub &amp; Super\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n类型样式代码上标 Superscripta^2, a^{x+3}a^2, a^{x+3}下标 Subscripta_2a_2组合 Grouping10^{30} a^{2+2}10^{30} a^{2+2}a_{i,j} b_{f&#039;}a_{i,j} b_{f&#039;}上下标混合 Combining sub &amp; superx_2^3x_2^3{x_2}^3{x_2}^3上标的上标 Super super10^{10^{8}}10^{10^{8}}混合标识 Preceding and/or additional sub &amp; super\\sideset{_1^2}{_3^4}X_a^b\\sideset{_1^2}{_3^4}X_a^b{}_1^2!\\Omega_3^4{}_1^2!\\Omega_3^4顶标底标 Stacking\\overset{\\alpha}{\\omega}\\overset{\\alpha}{\\omega}\\underset{\\alpha}{\\omega}\\underset{\\alpha}{\\omega}\\overset{\\alpha}{\\underset{\\gamma}{\\omega}}\\overset{\\alpha}{\\underset{\\gamma}{\\omega}}\\stackrel{\\alpha}{\\omega}\\stackrel{\\alpha}{\\omega}导数 Derivativesx&#039;, y&#039;&#039;, f&#039;, f&#039;&#039;x’, y”, f’, f”x^\\prime, y^{\\prime\\prime}x^\\prime, y^{\\prime\\prime}导数 Derivative dots\\dot{x}, \\ddot{x}\\dot{x}, \\ddot{x}下划线、上划线与向量 Underlines, overlines, vectors\\hat a\\bar b\\vec c\\hat a\\bar b\\vec c\\overrightarrow{a b}\\overleftarrow{c d}\\widehat{d e f}\\overrightarrow{a b}\\overleftarrow{c d}\\widehat{d e f}\\overline{g h i}\\underline{j k l}\\overline{g h i}\\underline{j k l}弧度 Arc (workaround)\\overset{\\frown}{AB}\\overset{\\frown}{AB}箭头 ArrowsA \\xleftarrow{n+\\mu-1} B \\xrightarrow[T]{n\\pm i-1} CA \\xleftarrow{n+\\mu-1} B \\xrightarrow[T]{n\\pm i-1} C大括号 Overbraces\\overbrace{ 1+2+\\cdots+100 }^{5050}\\overbrace{ 1+2+\\cdots+100 }^{5050}底部大括号 Underbraces\\underbrace{ a+b+\\cdots+z }\\_{26}\\underbrace{ a+b+\\cdots+z }_{26}求和运算 Sum\\sum_{k=1}^N k^2\\sum_{k=1}^N k^2文本模式下的求和运算 Sum (force \\textstyle)\\textstyle \\sum_{k=1}^N k^2\\textstyle \\sum_{k=1}^N k^2分式中的求和运算 Sum in a fraction (default \\textstyle)\\frac{\\sum_{k=1}^N k^2}{a}\\frac{\\sum_{k=1}^N k^2}{a}分式中的求和运算 Sum in a fraction (force \\displaystyle)\\frac{\\displaystyle \\sum_{k=1}^N k^2}{a}\\frac{\\displaystyle \\sum_{k=1}^N k^2}{a}分式中的求和运算 Sum in a fraction (alternative limits style)\\frac{\\sum\\limits^{^N}_{k=1} k^2}{a}\\frac{\\sum\\limits^{^N}_{k=1} k^2}{a}乘积运算 Product\\prod_{i=1}^N x_i\\prod_{i=1}^N x_i乘积运算 Product (force \\textstyle)\\textstyle \\prod_{i=1}^N x_i\\textstyle \\prod_{i=1}^N x_i副乘运算 Coproduct\\coprod_{i=1}^N x_i\\coprod_{i=1}^N x_i副乘运算 Coproduct (force \\textstyle)\\textstyle \\coprod_{i=1}^N x_i\\textstyle \\coprod_{i=1}^N x_i极限 Limit\\lim_{n \\to \\infty}x_n\\lim_{n \\to \\infty}x_n极限 Limit (force \\textstyle)\\textstyle \\lim_{n \\to \\infty}x_n\\textstyle \\lim_{n \\to \\infty}x_n积分 Integral\\int\\limits_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\int\\limits_{1}^{3}\\frac{e^3/x}{x^2}, dx积分 Integral (alternative limits style)\\int_{1}^{3}\\frac{e^3/x}{x^2}\\, dx\\int_{1}^{3}\\frac{e^3/x}{x^2}, dx积分 Integral (force \\textstyle)\\textstyle \\int\\limits_{-N}^{N} e^x dx\\textstyle \\int\\limits_{-N}^{N} e^x dx积分 Integral (force \\textstyle, alternative limits style)\\textstyle \\int_{-N}^{N} e^x dx\\textstyle \\int_{-N}^{N} e^x dx双重积分 Double integral\\iint\\limits_D dx\\,dy\\iint\\limits_D dx,dy三重积分 Triple integral\\iiint\\limits_E dx\\,dy\\,dz\\iiint\\limits_E dx,dy,dz四重积分 Quadruple integral\\iiiint\\limits_F dx\\,dy\\,dz\\,dt\\iiiint\\limits_F dx,dy,dz,dt路径积分 Line or path integral\\int_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\int_{(x,y)\\in C} x^3, dx + 4y^2, dy环路积分 Closed line or path integral\\oint_{(x,y)\\in C} x^3\\, dx + 4y^2\\, dy\\oint_{(x,y)\\in C} x^3, dx + 4y^2, dy交集 Intersections\\bigcap_{i=1}^n E_i\\bigcap_{i=1}^n E_i并集 Unions\\bigcup_{i=1}^n E_i\\bigcup_{i=1}^n E_i\n1.4 矩阵与多行列式 Matrices &amp; Multilines\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n类型样式LaTeX二项式系数 Binomial coefficients\\binom{n}{k}\\binom{n}{k}小型二项式系数 Small binomial coefficients (force \\textstyle)\\tbinom{n}{k}\\tbinom{n}{k}大型二项式系数 Large (normal) binomial coefficients (force \\displaystyle)\\dbinom{n}{k}\\dbinom{n}{k}矩阵 Matrices\\begin{matrix} x &amp; y \\\\ z &amp; v \\end{matrix}\\begin{matrix} x &amp; y \\ z &amp; v \\end{matrix}\\begin{vmatrix} x &amp; y \\\\ z &amp; v \\end{vmatrix}\\begin{vmatrix} x &amp; y \\ z &amp; v \\end{vmatrix}\\begin{Vmatrix} x &amp; y \\\\ z &amp; v \\end{Vmatrix}\\begin{Vmatrix} x &amp; y \\ z &amp; v \\end{Vmatrix}\\begin{bmatrix} 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 \\end{bmatrix}\\begin{bmatrix} 0 &amp; \\cdots &amp; 0 \\ \\vdots &amp; \\ddots &amp; \\vdots \\ 0 &amp; \\cdots &amp; 0 \\end{bmatrix}\\begin{Bmatrix} x &amp; y \\\\ z &amp; v \\end{Bmatrix}\\begin{Bmatrix} x &amp; y \\ z &amp; v \\end{Bmatrix}\\begin{pmatrix} x &amp; y \\\\ z &amp; v \\end{pmatrix}\\begin{pmatrix} x &amp; y \\ z &amp; v \\end{pmatrix}\\bigl( \\begin{smallmatrix} a&amp;b\\\\ c&amp;d \\end{smallmatrix} \\bigr)\\bigl( \\begin{smallmatrix} a&amp;b\\ c&amp;d \\end{smallmatrix} \\bigr)条件定义 Case distinctionsf(n) = \\begin{cases} n/2, &amp; \\text{if }n\\text{ is even} \\\\ 3n+1, &amp; \\text{if }n\\text{ is odd} \\end{cases}f(n) = \\begin{cases} n/2, &amp; \\text{if }n\\text{ is even} \\ 3n+1, &amp; \\text{if }n\\text{ is odd} \\end{cases}多行等式 Multiline equations\\begin{align} f(x) &amp; = (a+b)^2\\\\ &amp; = a^2+2ab+b^2 \\end{align}\\begin{align} f(x) &amp; = (a+b)^2\\ &amp; = a^2+2ab+b^2 \\end{align}\\begin{alignat}{2} f(x) &amp; = (a-b)^2 \\\\ &amp; = a^2-2ab+b^2 \\end{alignat}\\begin{alignat}{2} f(x) &amp; = (a-b)^2 \\ &amp; = a^2-2ab+b^2 \\end{alignat}\\begin{array}{lcl} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}\\begin{array}{lcl} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}\\begin{array}{lcr} z &amp; = &amp; a \\\\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}\\begin{array}{lcr} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \\end{array}方程组 Simultaneous equations\\begin{cases} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{cases}\\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \\end{cases}数组 Arrays\\begin{array}{ | c | c | c | } a &amp; b &amp; S \\ \\hline 0 &amp; 0 &amp; 1 \\ 0 &amp; 1 &amp; 1 \\ 1 &amp; 0 &amp; 1 \\ 1 &amp; 1 &amp; 0 \\end{array}\n1.5 括号 Brackets\n常用的括号符号例如( )[ ]{ }……这些也可以在输入环境中直接使用：\n2(x+y)=z\n\n\n\n                  \n                  Example\n                  \n                \n\n2(x+y)=z\n\n\n但如果是在较大的表达式中这些符号就显得不合适了\n( \\frac{\\pi}{2} )^n\n\n\n\n                  \n                  Example\n                  \n                \n\n( \\frac{\\pi}{2} )^n\n\n\n正确用法应配合\\left和\\right命令使用。\n\\left ( \\frac{\\pi}{2} \\right )^n\n\n\n\n                  \n                  Example\n                  \n                \n\n\\left ( \\frac{\\pi}{2} \\right )^n\n\n\n具体可参考下表。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n类型样式LaTeX圆括号、小括号 Parentheses\\left ( \\frac{a}{b} \\right )\\left ( \\frac{a}{b} \\right )方括号、中括号 Brackets\\left [ \\frac{a}{b} \\right ] \\quad \\left \\lbrack \\frac{a}{b} \\right \\rbrack\\left [ \\frac{a}{b} \\right ] \\quad \\left \\lbrack \\frac{a}{b} \\right \\rbrack花括号、大括号 Braces\\left { \\frac{a}{b} \\right } \\quad \\left \\lbrace \\frac{a}{b} \\right \\rbrace角括号 Angle brackets\\left \\langle \\frac{a}{b} \\right \\rangle\\left \\langle \\frac{a}{b} \\right \\rangle单竖线和双竖线 Bars and double bars\\left | \\frac{a}{b} \\right \\vert \\quad \\left \\Vert \\frac{c}{d} \\right |取整函数与取顶函数 Floor and ceiling functions:\\left \\lfloor \\frac{a}{b} \\right \\rfloor \\quad \\left \\lceil \\frac{c}{d} \\right \\rceil\\left \\lfloor \\frac{a}{b} \\right \\rfloor \\quad \\left \\lceil \\frac{c}{d} \\right \\rceil斜线与反斜线 Slashes and backslashes\\left / \\frac{a}{b} \\right \\backslash\\left / \\frac{a}{b} \\right \\backslash上下箭头 Up, down, and up-down arrows\\left \\uparrow \\frac{a}{b} \\right \\downarrow \\quad &lt;br&gt;\\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\quad &lt;br&gt;\\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow\\left \\uparrow \\frac{a}{b} \\right \\downarrow \\quad \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\quad \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow混合括号 Delimiters can be mixed,as long as \\left and \\right match\\left [ 0,1 \\right ) \\left \\langle \\psi \\right |如果您不希望某一侧括号显示，可以使用\\left. 和 \\right.（带有英文句号） Use \\left. and \\right. if you do not want a delimiter to appear\\left . \\frac{A}{B} \\right } \\to X括号的大小 Size of the delimiters (add “l” or “r” to indicate the side for proper spacing)(((((…]]]]]( \\bigl( \\Bigl( \\biggl( \\Biggl( \\dots \\Biggr] \\biggr] \\Bigr] \\bigr] ]{{{{{…⟩⟩⟩⟩⟩{ \\bigl{ \\Bigl{ \\biggl{ \\Biggl{ \\dots \\Biggr\\rangle \\biggr\\rangle \\Bigr\\rangle \\bigr\\rangle \\rangle∥‖‖‖‖…|| \\big| \\Big| \\bigg| \\Bigg| \\dots \\Bigg | \\bigg | \\Big | \\big |⌊⌊⌊⌊⌊…⌉⌉⌉⌉⌉\\lfloor \\bigl\\lfloor \\Bigl\\lfloor \\biggl\\lfloor \\Biggl\\lfloor \\dots \\Biggr\\rceil \\biggr\\rceil \\Bigr\\rceil \\bigr\\rceil \\rceil↑↑↑↑↑⋯⇓⇓⇓⇓⇓\\uparrow \\big\\uparrow \\Big\\uparrow \\bigg\\uparrow \\Bigg\\uparrow \\dots \\Bigg\\Downarrow \\bigg\\Downarrow \\Big\\Downarrow \\big\\Downarrow \\Downarrow↕↕↕↕↕⋯⇕⇕⇕⇕⇕\\updownarrow \\big\\updownarrow \\Big\\updownarrow \\bigg\\updownarrow \\Bigg\\updownarrow \\dots \\Bigg\\Updownarrow \\bigg\\Updownarrow \\Big\\Updownarrow \\big\\Updownarrow \\Updownarrow/////…\\\\∖/ \\big/ \\Big/ \\bigg/ \\Bigg/ \\dots \\Bigg\\backslash \\bigg\\backslash \\Big\\backslash \\big\\backslash \\backslash\n1.6 空格与换行 Spacing &amp; Line breaking\n1.6.1 空格 Spacing\nMathJax 能够自动处理大多数空格间距的大小，但如果您需要自己控制，可参考下表。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n序号样式LaTeX中文说明英文说明1a \\qquad ba \\qquad b双空格2a \\quad ba \\quad b单空格3a\\ ba\\ b字符空格4a \\text{ } ba \\text{ } b文本模式中的字符空格5a\\;ba;b大空格6a\\,ba,b小空格7abab极小空格(用于乘因子)8a ba b极小空格(用于区分其它语法)9\\mathit{ab}\\mathit{ab}没有空格(用于多字母变量)10a!ba!b负空格\n1.6.2 换行 Line breaking\n在 MathJax3.0 中取消了使用\\\\进行强制换行的功能，因此本页面也采取同样的逻辑，默认为单行公式环境。\\\\强制换行命令只在支持多行编辑的数学环境中才起作用，如eqnarray环境、align环境、array环境、matrix环境等等。如您需要显示多行公式，建议在此类环境中输入公式，具体用法参见章节2.10。\n或者您可直接在\\displaylines{}显示行命令中使用\\\\强制换行命令，例如：\n\\displaylines{y=1729x \\\\ y=1729-x}\n\n\n\n                  \n                  Example\n                  \n                \n\n\\displaylines{y=1729x \\\\ y=1729-x}\n\n\n1.7 颜色 Colors\n1.7.1 字体颜色 Font colors\n在公式中可以使用\\color{options}{math}来调用颜色命令，第一个参数为颜色，第二个参数为公式或文本内容。例如:\n{\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1}\n\n\n\n                  \n                  Example\n                  \n                \n\n{\\color{Blue}x^2}+{\\color{Orange}2x}-{\\color{LimeGreen}1}\n\n\nx_{1,2}=\\frac{{\\color{Blue}-b}\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Green}2a }\n\n\n\n                  \n                  Example\n                  \n                \n\nx_{1,2}=\\frac{{\\color{Blue}-b}\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Green}2a }\n\n\n\n\n                  \n                  Attention\n                  \n                \n\n使用\\color命令时，请将需要设置颜色的部分用{ }整体扩住，以表明\\color函数作用范围。\n\n\n1.7.2 背景颜色 Background color\n在文本环境中可以使用\\colorbox{options}{text}来调用背景颜色命令，第一个参数为颜色，第二个颜色为文本内容。例如：\n\\colorbox{yellow}{This is text}\n\n\n\n                  \n                  Example\n                  \n                \n\n\\colorbox{yellow}{This is text}\n\n\n\n\n                  \n                  Attention\n                  \n                \n\n若需要在数学环境中使用\\colorbox{}{}，请在第二个参数内加入$\\displaystyle + 公式$，例如：\n\\colorbox{yellow}{$\\displaystyle \\frac{a}{b}$}\n\n\\colorbox{yellow}{$\\displaystyle \\frac{a}{b}$}\n\n\n或者您可以使用  Bbox 扩展  来替换\\colorbox命令，详见下条 1.7.3。\n1.7.3 用 Bbox 扩展设置背景颜色 Setting background color with Bbox\nBbox 扩展是一款自定义宏包，如需使用请在公式页面右上角【设置】处勾选后使用。 具体用法如下：\n1.7.3.1 设置背景颜色 Setting Background color\n在公式中可以使用\\bbox[options]{math}来调用背景颜色命令，第一个参数为颜色或大小，需注意用[ ]包围，第二个参数为公式。例如:\n\\bbox[red]{x+y}\n\n\n\n                  \n                  Example\n                  \n                \n\n\\bbox[red]{x+y}\n\n\n1.7.3.2 调整背景大小 Setting Background Size\n默认情况下，背景大小为作用范围的最大边界，如需扩大背景，可在第一个参数中加入大小信息，例如：\n\\bbox[2pt]{x+y} %设置透明背景，并增加2pt额外距离\n\n\n\n                  \n                  Example\n                  \n                \n\n\\bbox[2pt]{x+y}\n\n\n\\bbox[red,5pt]{x+y} %设置红色背景，并增加5pt额外距离\n\n\n\n                  \n                  Example\n                  \n                \n\n\\bbox[red,5pt]{x+y}\n\n\n1.7.4 默认支持颜色 Colors supported\n支持的颜色\n1.7.5 使用 RGB 颜色 Use RGB color\n如需在\\color命令中使用自选 RGB 颜色，可使用{\\color[RGB]{0,0,0} }命令，例如：\n{\\color[RGB]{0,200,0} e^{i \\pi} + 1 = 0}\n\n\n\n                  \n                  Example\n                  \n                \n\n{\\color[RGB]{0,200,0} e^{i \\pi} + 1 = 0}\n\n\n1.7.6 自定义颜色 Custom colors\n可使用\\definecolor命令进行自定义颜色，例如：\n\\definecolor{mygreen}{RGB}{0,200,0} {\\color{mygreen}e^{i \\pi} + 1 = 0 }\n\n\n\n                  \n                  Example\n                  \n                \n\n\\definecolor{mygreen}{RGB}{0,200,0} {\\color{mygreen}e^{i \\pi} + 1 = 0 }\n\n\n1.8 字体字号 Fonts &amp; Size\n1.8.1 字体 Fonts\n字体\n1.8.2 字号 Size\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n样式LaTeX{\\tiny abc 巨小 tiny}{\\tiny abc 巨小 tiny}{\\scriptsize abc 超小 scriptsize}{\\scriptsize abc 超小 scriptsize}{\\small abc 小 small}{\\small abc 小 small}{\\normalsize abc 正常 normal}{\\normalsize abc 正常 normal}{\\large abc 大 large}{\\large abc 大 large}{\\Large abc 超大 Large}{\\Large abc 超大 Large}{\\LARGE abc 特大 LARGE}{\\LARGE abc 特大 LARGE}{\\huge abc 巨大 huge}{\\huge abc 巨大 huge}{\\Huge abc 巨无霸 Huge}{\\Huge abc 巨无霸 Huge}\n1.9 方程式编号 Equation numbering\n需要开启 AMS 宏包的方式获得方程自动编号，AMS 拓展包的具体开启方式请参考2.11.4。\n默认自动编号只在部分环境中起作用，如{equation}、{eqnarray}等，例如：\n在 AMS 包开启状态下，会在公式后进行自动编号：\n\\begin{eqnarray}\nE = mc^2 \\\\\ne^{i\\pi}+1=0\n\\end{eqnarray}\n\n如您在开启了 AMS 包状态下，整个公式均不希望出现编号，可使用{equation*}、或者{eqnarray*}环境；或单个方程不希望出现编号，可以在指定方程后面添加\\nonumber命令，如：\n\\begin{eqnarray*}\nE = mc^2 \\\\\ne^{i\\pi}+1=0\n\\end{eqnarray*}\n\n\\begin{eqnarray}\nE = mc^2 \\\\\ne^{i\\pi}+1=0 \\nonumber\n\\end{eqnarray}\n\n如您在开启了 AMS 包状态下，个别公式不希望出现编号，或者个别公式希望出现特有编号，可在公式后面使用\\tag{}或者\\notag命令，如：\n\\begin{eqnarray}\nE = mc^2 \\notag\\\\\ne^{i\\pi}+1=0 \\tag{b}\n\\end{eqnarray}\n\n1.10 LaTeX 环境 LaTeX environments\n环境通常是对代码段的整体描述，用于表达此段代码的角色，如，是矩阵？单行公式？多行公式？还是对齐公式等（本页面不支持文档环境），不同的环境起到的作用不同。以\\begin{environments}开始，\\end{environments}结束。如最常用的矩阵命令，也是环境的一种，用法如下：\n\\begin{bmatrix}\n1 &amp; 0 \\\\\n0 &amp; 1\n\\end{bmatrix}\n\n具体矩阵用法可参考章节2.4，下面给出几种其它常用环境的具体用法：\n1.10.1 equation 环境\n\\begin{equation}是单行公式环境，这意味着在此环境中只可以输入单行公式，同时\\\\等强制换行命令失效。如需对单行长公式进行强制换行，可使用\\begin{split}环境进行嵌套，并用&amp;字符表示对齐位置，如：\n\\begin{equation}\n\\begin{split}\ne ^ { x } = &amp; 1 + \\frac { x } { 1 ! } + \\frac { x ^ { 2 } } { 2 ! } + \\frac { x ^ { 3 } } { 3 ! } + \\cdots\n\\\\\n&amp; - \\infty &lt; x &lt; \\infty\n\\end{split}\n\\end{equation}\n\n\\begin{equation}环境在排版时可能会出现重影错误，可通过对整体添加{ }解决，如{\\begin{equation}……\\end{equation}}.\n1.10.2 eqnarray 环境\n\\begin{eqnarray}是多行公式环境，环境内的所有公式默认右对齐，由 LaTeX 内核提供。\n1.10.3 align 环境\n\\begin{align}是多行公式环境，环境内的所有公式默认右对齐，由 amsmath 提供，排版较为灵活，如需表示多行公式推荐使用此环境。\n\\begin{align}\ny = x \\\\\ny = 3x^2 + 5x + 2\n\\end{align}\n\n可使用&amp;字符调整对齐位置。\n\\begin{align}\ny &amp; = x \\\\\ny &amp; = 3x^2 + 5x + 2\n\\end{align}\n\n1.10.4 array 环境\n\\begin{array}{}是数组环境，需手动输入对齐参数：\n\\begin{array}{|c|l|r|}\na &amp; b &amp; S \\\\\n\\hline\n0 &amp; 0 &amp; 1 \\\\\n0 &amp; 1 &amp; 1 \\\\\n1 &amp; 0 &amp; 1 \\\\\n1 &amp; 1 &amp; 0 \\\\\n\\end{array}\n\n对齐参数使用c l r分别表示居中、居左和居右，如需竖线边框可直接在对齐参数区域输入|即可，如需横线边框可使用\\hline命令。\n更多环境使用可参考章节2.4。\n2 参考文献 Reference\n\nLaTeX 公式编辑器\nMathJax Documentation\nDisplaying a formula\nmathjax/MathJax: Beautiful math in all browsers - GitHub\nmhchem for MathJax\n"},"Quick-References/Markdown-Syntax":{"title":"Markdown Syntax","links":[],"tags":["Reference","Programming/Markdown"],"content":"基本语法\n标题 (Heading)\n# h1\n\n## h2\n\n### h3\n\nhead level 1\n============\n\nhead level 2\n------------\n\n加粗 (Bold)\n**bold text**\n__bold text__\n\n斜体 (Italic)\n*italicized text*\n_italicized text_\n\n引用 (Blockquote)\n&gt; blockquote\n\n有序列表 (Ordered List)\n1. First item\n    1. Nested first item\n    2. Nested second item\n2. Second item\n\n无序列表 (Unordered List)\n- First item\n- Second item\n- Third item\n\n* First item\n* Second item\n* Third item\n\n+ First item\n+ Second item\n+ Third item\n\n嵌入代码 (Inline Code)\n`code`\n\n水平分割线 (Horizontal Rule)\n---\n\n链接 (Link)\n[title](www.example.com)\n[in document link](#heading)\n\n&lt;raw.http.link&gt;\n&lt;raw@mail.link&gt;\n\n[reference style link][1]\n[1]: &lt;not.supported.in.all.editor&gt;\n\n图片 (Image)\n![alt text](image.jpg)\n![alt text](image.jpg &quot;optional title&quot;)\n\n增强的语法\n\n\n                  \n                  Tips\n                  \n                \n\n增强的语法并不是所有的 markdown render 都支持，使用时需要注意。\n\n\n表格 (Table)\n| Syntax    | Description     |\n| --------- | --------------- |\n| Header    | Title           |\n| Paragraph | Text &lt;br&gt; Text1 |\n\nalign text in table\n\n| Syntax    | Description |   Test Text |\n| :-------- | :---------: | ----------: |\n| Header    |    Title    | Here&#039;s this |\n| Paragraph |    Text     |    And more |\n\n代码块 (Code Block)\n```json\n{\n  &quot;firstName&quot;: &quot;John&quot;,\n  &quot;lastName&quot;: &quot;Smith&quot;,\n  &quot;age&quot;: 25\n}\n```\n脚注 (Footnote)\nHere&#039;s a sentence with a footnote. [^1]\n\n[^1]: This is the footnote.\n\n标题ID (Heading ID)\n### My Great Heading {#custom-id}\n\n定义列表 (Definition Lists)\nFirst Term\n: This is the definition of the first term.\n\nSecond Term\n: This is one definition of the second term.\n: This is another definition of the second term.\n\n删除线 (Strikethrough)\n~~The world is flat.~~\n\n任务清单 (Task List)\n- [x] Write the press release\n- [ ] Update the website\n- [ ] Contact the media\n\n表情 (Emoji)\nThat is so funny! :joy:\n\n高亮 (Highlight)\nI need to highlight these ==very important words==.\n\n上下标 (Superscript/Subscript)\nX^2^\nH~2~O\n\n对于不支持的 markdown 程序，可以直接使用内嵌 html 的方式实现。\nX&lt;sup&gt;2&lt;/sup&gt;\nH&lt;sub&gt;2&lt;/sub&gt;O\n"},"Quick-References/Obsidian-Formatting-Syntax":{"title":"Obsidian Formatting Syntax","links":["Quick-References/Markdown-Syntax","Quick-References/LaTeX-Quick-Reference"],"tags":["Reference","Software/Obsidian","Programming/Markdown"],"content":"基于 markdown 的语法\nObsidian 本身的 notes 都是 markdown 文件，所以支持大部分的 Markdown Syntax，对一些语法有所增加，有一些语意有稍微的改变。主要的不同有下面这些。\nMarkdown Link 语法的增强\n首先对 Markdown Syntax ❯ 链接 (Link) 增加了一种特殊种类，[[link]] 表示内部引用。当然也可以使用原本的 markdown 语法 []() 来表示。\n其次类似 Markdown Syntax ❯ 图片 (Image) 的语法，可以使用 ![[note-id]] 的方法在当前笔记中嵌入其它笔记的内容。\n特殊的引用标注语法 (callouts)\nCallouts 是对 Markdown Syntax ❯ 引用 (Blockquote) 的增强，可以生成在笔记中生成特定样式的插注，比如 info 插注。\n&gt; [!info]\n&gt; \n&gt; Here&#039;s a callout block.\n&gt; It supports **Markdown**, [[202404131056-markdown-syntax|Markdown Syntax]], and other.\n\n\n                  \n                  Info\n                  \n                \n\nHere’s a callout block.\nIt supports Markdown, Markdown Syntax, and other.\n\n\nCallouts 也支持折叠和嵌套。\n&gt; [!faq]- Are callouts foldable? &gt;\n&gt; \n&gt; Yes! In a foldable callout, the contents are hidden when the callout is collapsed.\n \n&gt; [!question] Can callouts be nested?\n&gt; \n&gt;\n&gt; &gt; [!todo] Yes!, they can.\n&gt; &gt;\n&gt; &gt; &gt; [!example] You can even use multiple layers of nesting.\n\n\n                  \n                  Are callouts foldable? \n                  \n                \n\nYes! In a foldable callout, the contents are hidden when the callout is collapsed.\n\n\n\n\n                  \n                  Can callouts be nested? \n                  \n                \n\n\n\n                  \n                  Yes!, they can. \n                  \n                \n\n\n\n                  \n                  You can even use multiple layers of nesting. \n                  \n                \n\n\n\n\n\n\n\n                  \n                  Callouts 支持的种类。 \n                  \n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntypealiasesabstractsummary, tldrinfotodotiphint, importantquestionhelp, faqsuccesscheck, donewarningcaution, attentionfailurefail, missingdangererrorbugexamplequotecite\n\n\n上下角标的实现\nObsidian 并不支持 Subscript)。如果需要有两个办法：\n\n数学公式中的脚标可以直接是用 数学符号 的方法，直接使用 LaTeX 实现。\n使用内嵌 html 的方法实现。\n\nX&lt;sup&gt;2&lt;/sup&gt;\nH&lt;sub&gt;2&lt;/sub&gt;O\n\n\n\n                  \n                  Example\n                  \n                \n\nX2\nH2O\n\n\nmarkdown 之外的增强语法\n除了对于 markdown 的支持和增强之外，Obsidian 还通过使用 Mermaid 和 MathJax 增加了对图表和数学符号的支持。\n图表\n使用 markdown codeblock 的语法来添加 mermaid 图表。\n```mermaid\nsequenceDiagram\n\tAlice-&gt;&gt;+John: Hello John, how are you?\n\tAlice-&gt;&gt;+John: John, can you hear me?\n\tJohn--&gt;&gt;-Alice: Hi Alice, I can hear you!\n\tJohn--&gt;&gt;-Alice: I feel great!\n```\n\n\n                  \n                  Example\n                  \n                \n\nsequenceDiagram\n\tAlice-&gt;&gt;+John: Hello John, how are you?\n\tAlice-&gt;&gt;+John: John, can you hear me?\n\tJohn--&gt;&gt;-Alice: Hi Alice, I can hear you!\n\tJohn--&gt;&gt;-Alice: I feel great!\n\n\n\n```mermaid\n\tgraph TD\n\tBiology --&gt; Chemistry\n```\n\n\n                  \n                  Example\n                  \n                \n\ngraph TD\nBiology --&gt; Chemistry\n\n\n\n通过图中节点添加 class 的方式可以在图中增加 obsidian 的内部连接。\n\n\n                  \n                  Example\n                  \n                \n\ngraph TD\nTypeclass --&gt; Monad\nclass Typeclass,Monad internal-link;\n\n\n\n更多的语法的图表类型可以参照 Mermaid 的文档。\n数学符号\nObsidian 支持使用 MathJax 显示使用 LaTeX 编写的数学符号和公式，有两种公式显示方式，块状的公式与行内公式，分别使用 $$ 和 $ 来实现。\n使用 $$ 可以添加块状的数学公式。\n$$\n\\begin{vmatrix}a &amp; b\\\\\nc &amp; d\n\\end{vmatrix}=ad-bc\n$$\n\n\n                  \n                  Example\n                  \n                \n\n\\begin{vmatrix}a &amp; b\\\\\nc &amp; d\n\\end{vmatrix}=ad-bc\n\n\n使用 $ 可添加行内的数学符号与公式。\nThis is an inline math expression $e^{2i\\pi} = 1$.\n\n\n\n                  \n                  Example\n                  \n                \n\nThis is an inline math expression e^{2i\\pi} = 1.\n\n\n更多的 LaTeX 语法可以查阅在线文档 MathJax Quick Reference。或者 LaTeX Quick Reference。\n注释\nObsidian 中还支持使用 `inline This is a block comment. Block comments can span multiple lines.\n这段文字在预览模式中不可见。\n%%"},"Quick-References/Pacman-常用命令":{"title":"Pacman 常用命令","links":[],"tags":["Reference","Linux/Command"],"content":"常用命令\n查找软件包：\n$ pacman -Ss keywords\n查询特定软件包的详细信息：\n$ pacman -Si pkgName1\n安装软件包（或者叫同步软件包更合适）：\n$ pacman -S pkgName1 pkgName2\n删除软件包：\n$ pacman -R pkgName1 pkgName2\n删除软件包和其不再被其它软件包依赖的依赖软件包：\n$ pacman -Rs pkgName1\n删除软件包时，pacman 会将重要的配置文件扩展名改为 .pacsave 用以备份，使用 -n 参数可以取消备份操作：\n$ pacman -Rn pkgName1\n升级所有软件包：\n$ pacman -Syu\n同步软件仓库的数据库而不升级：\n$ pacman -Sy\n列出所有已安装的软件包：\n$ pacman -Q\n搜索已安装的软件包：\n$ pacman -Qs keyword1 keyword2\n查询已安装软件包的详细信息：\n$ pacman -Qi pkgName1\n列出所有不再需要的依赖：\n$ pacman -Qdt\n清除缓存：\n$ pacman -Sc\npacman 的软件包数据库\npacman 使用中会遇到三个不同的软件包数据库\n\n本地已安装的软件包数据库，使用 -Q 参数来指定；\n远程的软件包数据库，使用 -S 参数来指定；\n软件包文件的数据库，使用 -F 参数来指定。\n\n明白了这一点，命令中该使用哪个参数就比较清楚了。如果忘记了也可以通过帮助命令快速查询：\n$ pacman -S --help\n$ pacman -Q --help\n$ pacman -F --help\nReferences\n\npacman usage\npacman command rosetta\n"},"Quick-References/ViFM-Cheatsheet":{"title":"ViFM Cheatsheet","links":["2023/Terminal-File-Manager"],"tags":["Reference","Software"],"content":"Vifm 是一个终端文件管理软件，其按键基本可以和 vim 是使用逻辑相对应。\n"},"index":{"title":"Yi's Cyber Records","links":["Blogs/Moral-Lessons-from-GNU-Emacs---Protesilaos","Blogs/Windows-开机端口被随机占用的原因与修复","Blogs/VIM实用技巧","Blogs/UTXO的委托代理问题","Blogs/让-Emacs-的-paredit-的编辑快捷键更符合直觉","Blogs/Emacs-中英文的对齐设置","Blogs/解决-org-mode-中-LaTeX-数学公式中的中文渲染问题","Blogs/经济学综合笔记","Blogs/使用-orgmode-+-github-pages-搭建博客","Quick-References/LaTeX-Quick-Reference","Quick-References/Markdown-Syntax","Quick-References/Obsidian-Formatting-Syntax","Quick-References/Editor-Config-File","Quick-References/Pacman-常用命令","Quick-References/ViFM-Cheatsheet"],"tags":["Homepage"],"content":"你好，陌生人：\n欢迎来到我的赛博花园！\n希望你是被搜索引擎检索带到了这里，因为那样意味着这里的某些信息可能对你有所帮助。如果真的能够帮助到你，我会十分高兴。\n如果不是，那不管目的是什么，希望你也能找到你需要的信息。\n这个空间中的文章是我本地的个人笔记的同步，当然并不是全部的笔记都会同步，目前只有少部分的文章同步，但我的目标是逐步的将更多的没有个人隐私的笔记同步到这里。\n如果你有任何问题或者建议，可以在此空间的 Github Repo 提 [issue]。或者向我发邮件。\n以上。\n文章\n\n\n2024-04-05 Moral Lessons from GNU Emacs - Protesilaos\n\n\n2024-01-06 Windows 开机端口被随机占用的原因与修复\n\n\n2023-10-31 Vim 实用技巧\n\n\n2022-08-10 UTXO的委托代理问题\n\n\n2022-01-24 让 Emacs 的 paredit 的编辑快捷键更符合直觉\n\n\n2021-12-18 Emacs 中英文的对齐设置\n\n\n2021-12-16 解决 org-mode 中 LaTeX 数学公式中的中文渲染问题\n\n\n2021-03-18 经济学综合笔记\n\n\n2020-12-06 使用 orgmode + github pages 搭建博客\n\n\n迷你手册\n\n\nLaTex 语法速查\n\n\nMarkdown 语法\n\n\nObsidian 编辑语法速查\n\n\nEditor Config File\n\n\nPacman 常用命令\n\n\nViFM Cheatsheet\n\n\n联系信息\n\nGithub: github.com/q3yi\nEmail: qing.yi[at]outlook.com\n"}}